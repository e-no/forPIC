

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Feb 13 11:33:33 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  0011                     	;# 
    31  0012                     	;# 
    32  0015                     	;# 
    33  0016                     	;# 
    34  0016                     	;# 
    35  0017                     	;# 
    36  0018                     	;# 
    37  0019                     	;# 
    38  001A                     	;# 
    39  001B                     	;# 
    40  001C                     	;# 
    41  001E                     	;# 
    42  001F                     	;# 
    43  008C                     	;# 
    44  0091                     	;# 
    45  0092                     	;# 
    46  0095                     	;# 
    47  0096                     	;# 
    48  0097                     	;# 
    49  0098                     	;# 
    50  0099                     	;# 
    51  009A                     	;# 
    52  009B                     	;# 
    53  009B                     	;# 
    54  009C                     	;# 
    55  009D                     	;# 
    56  009E                     	;# 
    57  010C                     	;# 
    58  0111                     	;# 
    59  0112                     	;# 
    60  0115                     	;# 
    61  0116                     	;# 
    62  0117                     	;# 
    63  0118                     	;# 
    64  0119                     	;# 
    65  011A                     	;# 
    66  011B                     	;# 
    67  011D                     	;# 
    68  011D                     	;# 
    69  018C                     	;# 
    70  0191                     	;# 
    71  0191                     	;# 
    72  0192                     	;# 
    73  0193                     	;# 
    74  0193                     	;# 
    75  0193                     	;# 
    76  0194                     	;# 
    77  0195                     	;# 
    78  0196                     	;# 
    79  0199                     	;# 
    80  019A                     	;# 
    81  019B                     	;# 
    82  019B                     	;# 
    83  019B                     	;# 
    84  019B                     	;# 
    85  019C                     	;# 
    86  019C                     	;# 
    87  019D                     	;# 
    88  019E                     	;# 
    89  019F                     	;# 
    90  020C                     	;# 
    91  0211                     	;# 
    92  0211                     	;# 
    93  0212                     	;# 
    94  0212                     	;# 
    95  0213                     	;# 
    96  0213                     	;# 
    97  0214                     	;# 
    98  0214                     	;# 
    99  0215                     	;# 
   100  0215                     	;# 
   101  0215                     	;# 
   102  0216                     	;# 
   103  0216                     	;# 
   104  0217                     	;# 
   105  0217                     	;# 
   106  0291                     	;# 
   107  0291                     	;# 
   108  0292                     	;# 
   109  0293                     	;# 
   110  0294                     	;# 
   111  0295                     	;# 
   112  0295                     	;# 
   113  0296                     	;# 
   114  0391                     	;# 
   115  0392                     	;# 
   116  0393                     	;# 
   117  039A                     	;# 
   118  039C                     	;# 
   119  039D                     	;# 
   120  039E                     	;# 
   121  039F                     	;# 
   122  0FE4                     	;# 
   123  0FE5                     	;# 
   124  0FE6                     	;# 
   125  0FE7                     	;# 
   126  0FE8                     	;# 
   127  0FE9                     	;# 
   128  0FEA                     	;# 
   129  0FEB                     	;# 
   130  0FED                     	;# 
   131  0FEE                     	;# 
   132  0FEF                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  008C                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0095                     	;# 
   163  0096                     	;# 
   164  0097                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009A                     	;# 
   168  009B                     	;# 
   169  009B                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  010C                     	;# 
   174  0111                     	;# 
   175  0112                     	;# 
   176  0115                     	;# 
   177  0116                     	;# 
   178  0117                     	;# 
   179  0118                     	;# 
   180  0119                     	;# 
   181  011A                     	;# 
   182  011B                     	;# 
   183  011D                     	;# 
   184  011D                     	;# 
   185  018C                     	;# 
   186  0191                     	;# 
   187  0191                     	;# 
   188  0192                     	;# 
   189  0193                     	;# 
   190  0193                     	;# 
   191  0193                     	;# 
   192  0194                     	;# 
   193  0195                     	;# 
   194  0196                     	;# 
   195  0199                     	;# 
   196  019A                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019B                     	;# 
   200  019B                     	;# 
   201  019C                     	;# 
   202  019C                     	;# 
   203  019D                     	;# 
   204  019E                     	;# 
   205  019F                     	;# 
   206  020C                     	;# 
   207  0211                     	;# 
   208  0211                     	;# 
   209  0212                     	;# 
   210  0212                     	;# 
   211  0213                     	;# 
   212  0213                     	;# 
   213  0214                     	;# 
   214  0214                     	;# 
   215  0215                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0216                     	;# 
   219  0216                     	;# 
   220  0217                     	;# 
   221  0217                     	;# 
   222  0291                     	;# 
   223  0291                     	;# 
   224  0292                     	;# 
   225  0293                     	;# 
   226  0294                     	;# 
   227  0295                     	;# 
   228  0295                     	;# 
   229  0296                     	;# 
   230  0391                     	;# 
   231  0392                     	;# 
   232  0393                     	;# 
   233  039A                     	;# 
   234  039C                     	;# 
   235  039D                     	;# 
   236  039E                     	;# 
   237  039F                     	;# 
   238  0FE4                     	;# 
   239  0FE5                     	;# 
   240  0FE6                     	;# 
   241  0FE7                     	;# 
   242  0FE8                     	;# 
   243  0FE9                     	;# 
   244  0FEA                     	;# 
   245  0FEB                     	;# 
   246  0FED                     	;# 
   247  0FEE                     	;# 
   248  0FEF                     	;# 
   249                           
   250                           	psect	stringtext
   251  0200                     __pstringtext:	
   252  0200                     _dpowers:	
   253  0200  3401               	retlw	1
   254  0201  3400               	retlw	0
   255  0202  340A               	retlw	10
   256  0203  3400               	retlw	0
   257  0204  3464               	retlw	100
   258  0205  3400               	retlw	0
   259  0206  34E8               	retlw	232
   260  0207  3403               	retlw	3
   261  0208  3410               	retlw	16
   262  0209  3427               	retlw	39
   263  020A                     __end_of_dpowers:	
   264  0011                     _PIR1bits	set	17
   265  000C                     _PORTA	set	12
   266  001B                     _PR2	set	27
   267  001C                     _T2CON	set	28
   268  0015                     _TMR0	set	21
   269  001A                     _TMR2	set	26
   270  005F                     _GIE	set	95
   271  0060                     _RA0	set	96
   272  0061                     _RA1	set	97
   273  0062                     _RA2	set	98
   274  005D                     _TMR0IE	set	93
   275  005A                     _TMR0IF	set	90
   276  00E2                     _TMR2ON	set	226
   277  0095                     _OPTION_REG	set	149
   278  0099                     _OSCCON	set	153
   279  008C                     _TRISA	set	140
   280  08EF                     _RXDTSEL	set	2287
   281  08EA                     _TXCKSEL	set	2282
   282  018C                     _ANSELAbits	set	396
   283  019D                     _RCSTA	set	413
   284  019B                     _SPBRG	set	411
   285  019A                     _TXREG	set	410
   286  019E                     _TXSTA	set	414
   287  0293                     _CCP1CON	set	659
   288  0292                     _CCPR1H	set	658
   289  0291                     _CCPR1L	set	657
   290  020A                     __stringdata:	
   291  020A                     STR_1:	
   292  020A  3476               	retlw	118	;'v'
   293  020B  3461               	retlw	97	;'a'
   294  020C  346C               	retlw	108	;'l'
   295  020D  3475               	retlw	117	;'u'
   296  020E  3465               	retlw	101	;'e'
   297  020F  343A               	retlw	58	;':'
   298  0210  3425               	retlw	37	;'%'
   299  0211  3464               	retlw	100	;'d'
   300  0212  3420               	retlw	32	;' '
   301  0213  340A               	retlw	10
   302  0214  340D               	retlw	13
   303  0215  3400               	retlw	0
   304  0216                     __end_of__stringdata:	
   305                           
   306                           ; #config settings
   307  0000                     
   308                           	psect	cinit
   309  0031                     start_initialization:	
   310  0031                     __initialization:	
   311                           
   312                           ; Clear objects allocated to COMMON
   313  0031  01FA               	clrf	__pbssCOMMON& (0+127)
   314  0032  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   315                           
   316                           ; Clear objects allocated to BANK0
   317  0033  01BD               	clrf	__pbssBANK0& (0+127)
   318  0034  01BE               	clrf	(__pbssBANK0+1)& (0+127)
   319  0035  01BF               	clrf	(__pbssBANK0+2)& (0+127)
   320  0036  01C0               	clrf	(__pbssBANK0+3)& (0+127)
   321  0037                     end_of_initialization:	
   322                           ;End of C runtime variable initialization code
   323                           
   324  0037                     __end_of__initialization:	
   325  0037  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   326  0038  0020               	movlb	0
   327  0039  2906               	ljmp	_main	;jump to C main() function
   328                           
   329                           	psect	bssCOMMON
   330  007A                     __pbssCOMMON:	
   331  007A                     main@led_flag:	
   332  007A                     	ds	2
   333                           
   334                           	psect	bssBANK0
   335  003D                     __pbssBANK0:	
   336  003D                     _Count:	
   337  003D                     	ds	2
   338  003F                     _LEDflg:	
   339  003F                     	ds	2
   340                           
   341                           	psect	cstackCOMMON
   342  0070                     __pcstackCOMMON:	
   343  0070                     ?_main:	
   344  0070                     ?_InterTimer:	
   345                           ; 0 bytes @ 0x0
   346                           
   347  0070                     ??_InterTimer:	
   348                           ; 0 bytes @ 0x0
   349                           
   350                           
   351                           ; 0 bytes @ 0x0
   352  0070                     	ds	2
   353  0072                     ?_strOutUSART:	
   354  0072                     ?___lwdiv:	
   355                           ; 0 bytes @ 0x2
   356                           
   357  0072                     strOutUSART@str:	
   358                           ; 2 bytes @ 0x2
   359                           
   360  0072                     ___lwdiv@divisor:	
   361                           ; 2 bytes @ 0x2
   362                           
   363                           
   364                           ; 2 bytes @ 0x2
   365  0072                     	ds	2
   366  0074                     ??_strOutUSART:	
   367  0074                     ___lwdiv@dividend:	
   368                           ; 0 bytes @ 0x4
   369                           
   370                           
   371                           ; 2 bytes @ 0x4
   372  0074                     	ds	2
   373  0076                     ??___lwdiv:	
   374                           
   375                           ; 0 bytes @ 0x6
   376  0076                     	ds	1
   377  0077                     ___lwdiv@quotient:	
   378                           
   379                           ; 2 bytes @ 0x7
   380  0077                     	ds	2
   381  0079                     ___lwdiv@counter:	
   382                           
   383                           ; 1 bytes @ 0x9
   384  0079                     	ds	1
   385                           
   386                           	psect	cstackBANK0
   387  0020                     __pcstackBANK0:	
   388  0020                     ?___lwmod:	
   389  0020                     ___lwmod@divisor:	
   390                           ; 2 bytes @ 0x0
   391                           
   392                           
   393                           ; 2 bytes @ 0x0
   394  0020                     	ds	2
   395  0022                     ___lwmod@dividend:	
   396                           
   397                           ; 2 bytes @ 0x2
   398  0022                     	ds	2
   399  0024                     ??___lwmod:	
   400                           
   401                           ; 0 bytes @ 0x4
   402  0024                     	ds	1
   403  0025                     ___lwmod@counter:	
   404                           
   405                           ; 1 bytes @ 0x5
   406  0025                     	ds	1
   407  0026                     ?_sprintf:	
   408  0026                     sprintf@sp:	
   409                           ; 2 bytes @ 0x6
   410                           
   411                           
   412                           ; 2 bytes @ 0x6
   413  0026                     	ds	2
   414  0028                     sprintf@f:	
   415                           
   416                           ; 2 bytes @ 0x8
   417  0028                     	ds	4
   418  002C                     ??_sprintf:	
   419                           
   420                           ; 0 bytes @ 0xC
   421  002C                     	ds	4
   422  0030                     sprintf@ap:	
   423                           
   424                           ; 1 bytes @ 0x10
   425  0030                     	ds	1
   426  0031                     sprintf@flag:	
   427                           
   428                           ; 1 bytes @ 0x11
   429  0031                     	ds	1
   430  0032                     sprintf@prec:	
   431                           
   432                           ; 1 bytes @ 0x12
   433  0032                     	ds	1
   434  0033                     sprintf@_val:	
   435                           
   436                           ; 4 bytes @ 0x13
   437  0033                     	ds	4
   438  0037                     sprintf@c:	
   439                           
   440                           ; 1 bytes @ 0x17
   441  0037                     	ds	1
   442  0038                     ??_main:	
   443                           
   444                           ; 0 bytes @ 0x18
   445  0038                     	ds	3
   446  003B                     main@str:	
   447  003B                     main@ans:	
   448                           ; 0 bytes @ 0x1B
   449                           
   450                           
   451                           ; 2 bytes @ 0x1B
   452  003B                     	ds	2
   453                           
   454                           	psect	maintext
   455  0106                     __pmaintext:	
   456 ;;
   457 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   458 ;;
   459 ;; *************** function _main *****************
   460 ;; Defined at:
   461 ;;		line 43 in file "main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  ans             2   27[BANK0 ] int 
   466 ;;  str             0   27[BANK0 ] unsigned char [0]
   467 ;; Return value:  Size  Location     Type
   468 ;;		None               void
   469 ;; Registers used:
   470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 17F/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1
   476 ;;      Params:         0       0       0
   477 ;;      Locals:         0       2       0
   478 ;;      Temps:          0       3       0
   479 ;;      Totals:         0       5       0
   480 ;;Total ram usage:        5 bytes
   481 ;; Hardware stack levels required when called:    3
   482 ;; This function calls:
   483 ;;		_sprintf
   484 ;;		_strOutUSART
   485 ;; This function is called by:
   486 ;;		Startup code after reset
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           
   491                           ;psect for function _main
   492  0106                     _main:	
   493                           
   494                           ;main.c: 45: static short int led_flag = 0;
   495                           ;main.c: 46: int ans;
   496                           ;main.c: 47: char str[];
   497                           ;main.c: 49: OSCCON = 0b01110010;
   498                           
   499                           ;incstack = 0
   500                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   501  0106  3072               	movlw	114
   502  0107  0021               	movlb	1	; select bank1
   503  0108  0099               	movwf	25	;volatile
   504                           
   505                           ;main.c: 50: ANSELAbits.ANSELA = 0b00000000;
   506  0109  30E0               	movlw	-32
   507  010A  0023               	movlb	3	; select bank3
   508  010B  058C               	andwf	12,f	;volatile
   509                           
   510                           ;main.c: 51: TRISA = 0b00001001;
   511  010C  3009               	movlw	9
   512  010D  0021               	movlb	1	; select bank1
   513  010E  008C               	movwf	12	;volatile
   514                           
   515                           ;main.c: 52: PORTA = 0b00000000;
   516  010F  0020               	movlb	0	; select bank0
   517  0110  018C               	clrf	12	;volatile
   518                           
   519                           ;main.c: 54: RXDTSEL = 1;
   520  0111  0022               	movlb	2	; select bank2
   521  0112  179D               	bsf	29,7	;volatile
   522                           
   523                           ;main.c: 55: TXCKSEL = 1;
   524  0113  151D               	bsf	29,2	;volatile
   525                           
   526                           ;main.c: 56: TXSTA = 0b00100100;
   527  0114  3024               	movlw	36
   528  0115  0023               	movlb	3	; select bank3
   529  0116  009E               	movwf	30	;volatile
   530                           
   531                           ;main.c: 57: RCSTA = 0b10010000;
   532  0117  3090               	movlw	144
   533  0118  009D               	movwf	29	;volatile
   534                           
   535                           ;main.c: 58: SPBRG = 51;
   536  0119  3033               	movlw	51
   537  011A  009B               	movwf	27	;volatile
   538                           
   539                           ;main.c: 60: OPTION_REG = 0b00000110;
   540  011B  3006               	movlw	6
   541  011C  0021               	movlb	1	; select bank1
   542  011D  0095               	movwf	21	;volatile
   543                           
   544                           ;main.c: 61: TMR0 = 61;
   545  011E  303D               	movlw	61
   546  011F  0020               	movlb	0	; select bank0
   547  0120  0095               	movwf	21	;volatile
   548                           
   549                           ;main.c: 62: TMR0IF = 0;
   550  0121  110B               	bcf	11,2	;volatile
   551                           
   552                           ;main.c: 63: Count = 0;
   553  0122  01BD               	clrf	_Count
   554  0123  01BE               	clrf	_Count+1
   555                           
   556                           ;main.c: 64: TMR0IE = 1;
   557  0124  168B               	bsf	11,5	;volatile
   558                           
   559                           ;main.c: 65: GIE = 1;
   560  0125  178B               	bsf	11,7	;volatile
   561                           
   562                           ;main.c: 67: LEDflg = 0;
   563  0126  01BF               	clrf	_LEDflg
   564  0127  01C0               	clrf	_LEDflg+1
   565                           
   566                           ;main.c: 69: _delay((unsigned long)((200)*(32000000/4000.0)));
   567  0128  3009               	movlw	9
   568  0129  00BA               	movwf	??_main+2
   569  012A  301E               	movlw	30
   570  012B  00B9               	movwf	??_main+1
   571  012C  30EB               	movlw	235
   572  012D  00B8               	movwf	??_main
   573  012E                     u1047:	
   574  012E  0BB8               	decfsz	??_main,f
   575  012F  292E               	goto	u1047
   576  0130  0BB9               	decfsz	??_main+1,f
   577  0131  292E               	goto	u1047
   578  0132  0BBA               	decfsz	??_main+2,f
   579  0133  292E               	goto	u1047
   580  0134  0000               	nop
   581  0135                     l1279:	
   582                           ;main.c: 72: while (1) {
   583                           
   584                           
   585                           ;main.c: 75: RA1 = 1;
   586  0135  0020               	movlb	0	; select bank0
   587  0136  148C               	bsf	12,1	;volatile
   588                           
   589                           ;main.c: 76: RA2 = 0;
   590  0137  110C               	bcf	12,2	;volatile
   591                           
   592                           ;main.c: 78: _delay((unsigned long)((100)*(32000000/4000.0)));
   593  0138  3005               	movlw	5
   594  0139  00BA               	movwf	??_main+2
   595  013A  300F               	movlw	15
   596  013B  00B9               	movwf	??_main+1
   597  013C  30F4               	movlw	244
   598  013D  00B8               	movwf	??_main
   599  013E                     u1057:	
   600  013E  0BB8               	decfsz	??_main,f
   601  013F  293E               	goto	u1057
   602  0140  0BB9               	decfsz	??_main+1,f
   603  0141  293E               	goto	u1057
   604  0142  0BBA               	decfsz	??_main+2,f
   605  0143  293E               	goto	u1057
   606                           
   607                           ;main.c: 82: ans = 10;
   608  0144  300A               	movlw	10
   609  0145  0020               	movlb	0	; select bank0
   610  0146  00BB               	movwf	main@ans
   611  0147  3000               	movlw	0
   612  0148  00BC               	movwf	main@ans+1
   613                           
   614                           ;main.c: 84: sprintf(str,"value:%d \n\r",ans);
   615  0149  303B               	movlw	low main@str
   616  014A  00A6               	movwf	sprintf@sp
   617  014B  3000               	movlw	high main@str
   618  014C  00A7               	movwf	sprintf@sp+1
   619  014D  300A               	movlw	low (STR_1| (0+32768))
   620  014E  00A8               	movwf	sprintf@f
   621  014F  3082               	movlw	high (STR_1| (0+32768))
   622  0150  00A9               	movwf	sprintf@f+1
   623  0151  083C               	movf	main@ans+1,w
   624  0152  01AB               	clrf	?_sprintf+5
   625  0153  07AB               	addwf	?_sprintf+5,f
   626  0154  083B               	movf	main@ans,w
   627  0155  01AA               	clrf	?_sprintf+4
   628  0156  07AA               	addwf	?_sprintf+4,f
   629  0157  203A               	fcall	_sprintf
   630                           
   631                           ;main.c: 86: strOutUSART(str);
   632  0158  303B               	movlw	low main@str
   633  0159  00F2               	movwf	strOutUSART@str
   634  015A  3000               	movlw	high main@str
   635  015B  00F3               	movwf	strOutUSART@str+1
   636  015C  2216               	fcall	_strOutUSART
   637                           
   638                           ;main.c: 88: RA1 = 0;
   639  015D  0020               	movlb	0	; select bank0
   640  015E  108C               	bcf	12,1	;volatile
   641                           
   642                           ;main.c: 89: RA2 = 1;
   643  015F  150C               	bsf	12,2	;volatile
   644                           
   645                           ;main.c: 91: _delay((unsigned long)((100)*(32000000/4000.0)));
   646  0160  3005               	movlw	5
   647  0161  00BA               	movwf	??_main+2
   648  0162  300F               	movlw	15
   649  0163  00B9               	movwf	??_main+1
   650  0164  30F4               	movlw	244
   651  0165  00B8               	movwf	??_main
   652  0166                     u1067:	
   653  0166  0BB8               	decfsz	??_main,f
   654  0167  2966               	goto	u1067
   655  0168  0BB9               	decfsz	??_main+1,f
   656  0169  2966               	goto	u1067
   657  016A  0BBA               	decfsz	??_main+2,f
   658  016B  2966               	goto	u1067
   659  016C  2935               	goto	l1279
   660  016D                     __end_of_main:	
   661                           
   662                           	psect	text1
   663  0216                     __ptext1:	
   664 ;; *************** function _strOutUSART *****************
   665 ;; Defined at:
   666 ;;		line 113 in file "main.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;  str             2    2[COMMON] PTR unsigned char 
   669 ;;		 -> main@str(0), 
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;		None               void
   674 ;; Registers used:
   675 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1
   681 ;;      Params:         2       0       0
   682 ;;      Locals:         0       0       0
   683 ;;      Temps:          0       0       0
   684 ;;      Totals:         2       0       0
   685 ;;Total ram usage:        2 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    1
   688 ;; This function calls:
   689 ;;		Nothing
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _strOutUSART
   697  0216                     _strOutUSART:	
   698  0216                     l1097:	
   699                           ;main.c: 114: while(*str){
   700                           
   701                           ;incstack = 0
   702                           ; Regs used in _strOutUSART: [wreg+fsr1l+fsr1h+status,2+status,0]
   703                           
   704  0216  0872               	movf	strOutUSART@str,w
   705  0217  0086               	movwf	6
   706  0218  0873               	movf	strOutUSART@str+1,w
   707  0219  0087               	movwf	7
   708  021A  0881               	movf	1,f
   709  021B  1903               	btfsc	3,2
   710  021C  0008               	return
   711  021D                     l66:	
   712                           ;main.c: 115: while (!PIR1bits.TXIF);
   713                           
   714  021D  0020               	movlb	0	; select bank0
   715  021E  1E11               	btfss	17,4	;volatile
   716  021F  2A1D               	goto	l66
   717                           
   718                           ;main.c: 116: TXREG = *str++;
   719  0220  0872               	movf	strOutUSART@str,w
   720  0221  0086               	movwf	6
   721  0222  0873               	movf	strOutUSART@str+1,w
   722  0223  0087               	movwf	7
   723  0224  0801               	movf	1,w
   724  0225  0023               	movlb	3	; select bank3
   725  0226  009A               	movwf	26	;volatile
   726  0227  3001               	movlw	1
   727  0228  07F2               	addwf	strOutUSART@str,f
   728  0229  3000               	movlw	0
   729  022A  3DF3               	addwfc	strOutUSART@str+1,f
   730  022B  2A16               	goto	l1097
   731  022C                     __end_of_strOutUSART:	
   732                           
   733                           	psect	text2
   734  003A                     __ptext2:	
   735 ;; *************** function _sprintf *****************
   736 ;; Defined at:
   737 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  sp              2    6[BANK0 ] PTR unsigned char 
   740 ;;		 -> main@str(0), 
   741 ;;  f               2    8[BANK0 ] PTR const unsigned char 
   742 ;;		 -> STR_1(12), 
   743 ;; Auto vars:     Size  Location     Type
   744 ;;  _val            4   19[BANK0 ] struct .
   745 ;;  c               1   23[BANK0 ] char 
   746 ;;  prec            1   18[BANK0 ] char 
   747 ;;  flag            1   17[BANK0 ] unsigned char 
   748 ;;  ap              1   16[BANK0 ] PTR void [1]
   749 ;;		 -> ?_sprintf(2), 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  2    6[BANK0 ] int 
   752 ;; Registers used:
   753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMMON   BANK0   BANK1
   759 ;;      Params:         0       6       0
   760 ;;      Locals:         0       8       0
   761 ;;      Temps:          0       4       0
   762 ;;      Totals:         0      18       0
   763 ;;Total ram usage:       18 bytes
   764 ;; Hardware stack levels used:    1
   765 ;; Hardware stack levels required when called:    2
   766 ;; This function calls:
   767 ;;		___lwdiv
   768 ;;		___lwmod
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           
   775                           ;psect for function _sprintf
   776  003A                     _sprintf:	
   777                           
   778                           ;doprnt.c: 494: va_list ap;
   779                           ;doprnt.c: 499: signed char c;
   780                           ;doprnt.c: 506: signed char prec;
   781                           ;doprnt.c: 508: unsigned char flag;
   782                           ;doprnt.c: 527: union {
   783                           ;doprnt.c: 528: unsigned int _val;
   784                           ;doprnt.c: 529: struct {
   785                           ;doprnt.c: 530: const char * _cp;
   786                           ;doprnt.c: 531: unsigned _len;
   787                           ;doprnt.c: 532: } _str;
   788                           ;doprnt.c: 533: } _val;
   789                           ;doprnt.c: 542: *ap = __va_start();
   790                           
   791                           ;incstack = 0
   792                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   793  003A  302A               	movlw	(?_sprintf+4)& (0+255)
   794  003B  0020               	movlb	0	; select bank0
   795  003C  00AC               	movwf	??_sprintf
   796  003D  082C               	movf	??_sprintf,w
   797  003E  00B0               	movwf	sprintf@ap
   798  003F                     l1239:	
   799                           ;doprnt.c: 545: while(c = *f++) {
   800                           
   801  003F  0829               	movf	sprintf@f+1,w
   802  0040  00AD               	movwf	??_sprintf+1
   803  0041  0828               	movf	sprintf@f,w
   804  0042  00AC               	movwf	??_sprintf
   805  0043  0AA8               	incf	sprintf@f,f
   806  0044  1903               	skipnz
   807  0045  0AA9               	incf	sprintf@f+1,f
   808  0046  082C               	movf	??_sprintf,w
   809  0047  0084               	movwf	4
   810  0048  082D               	movf	??_sprintf+1,w
   811  0049  0085               	movwf	5
   812  004A  0800               	movf	0,w	;code access
   813  004B  00AE               	movwf	??_sprintf+2
   814  004C  082E               	movf	??_sprintf+2,w
   815  004D  00B7               	movwf	sprintf@c
   816  004E  08B7               	movf	sprintf@c,f
   817  004F  1903               	btfsc	3,2
   818  0050  2900               	goto	l1241
   819                           
   820                           ;doprnt.c: 547: if(c != '%')
   821  0051  0837               	movf	sprintf@c,w
   822  0052  3A25               	xorlw	37
   823  0053  1903               	skipnz
   824  0054  2860               	goto	l1195
   825                           
   826                           ;doprnt.c: 549: {
   827                           ;doprnt.c: 550: ((*sp++ = (c)));
   828  0055  0826               	movf	sprintf@sp,w
   829  0056  0086               	movwf	6
   830  0057  0827               	movf	sprintf@sp+1,w
   831  0058  0087               	movwf	7
   832  0059  0837               	movf	sprintf@c,w
   833  005A  0081               	movwf	1
   834  005B  3001               	movlw	1
   835  005C  07A6               	addwf	sprintf@sp,f
   836  005D  3000               	movlw	0
   837  005E  3DA7               	addwfc	sprintf@sp+1,f
   838                           
   839                           ;doprnt.c: 551: continue;
   840  005F  283F               	goto	l1239
   841  0060                     l1195:	
   842                           
   843                           ;doprnt.c: 552: }
   844                           ;doprnt.c: 557: flag = 0;
   845  0060  01B1               	clrf	sprintf@flag
   846                           
   847                           ;doprnt.c: 831: }
   848                           
   849                           ;doprnt.c: 822: continue;
   850                           
   851                           ;doprnt.c: 811: default:
   852                           
   853                           ;doprnt.c: 707: case 'i':
   854                           ;doprnt.c: 708: break;
   855                           
   856                           ;doprnt.c: 706: case 'd':
   857                           
   858                           ;doprnt.c: 647: goto alldone;
   859                           
   860                           ;doprnt.c: 646: case 0:
   861                           
   862                           ;doprnt.c: 644: switch(c = *f++) {
   863  0061  0829               	movf	sprintf@f+1,w
   864  0062  00AD               	movwf	??_sprintf+1
   865  0063  0828               	movf	sprintf@f,w
   866  0064  00AC               	movwf	??_sprintf
   867  0065  0AA8               	incf	sprintf@f,f
   868  0066  1903               	skipnz
   869  0067  0AA9               	incf	sprintf@f+1,f
   870  0068  082C               	movf	??_sprintf,w
   871  0069  0084               	movwf	4
   872  006A  082D               	movf	??_sprintf+1,w
   873  006B  0085               	movwf	5
   874  006C  0800               	movf	0,w	;code access
   875  006D  00B7               	movwf	sprintf@c
   876                           
   877                           ; Switch size 1, requested type "space"
   878                           ; Number of cases is 3, Range of values is 0 to 105
   879                           ; switch strategies available:
   880                           ; Name         Instructions Cycles
   881                           ; simple_byte           10     6 (average)
   882                           ; direct_byte          218     6 (fixed)
   883                           ; jumptable            260     6 (fixed)
   884                           ;	Chosen strategy is simple_byte
   885  006E  3A00               	xorlw	0	; case 0
   886  006F  1903               	skipnz
   887  0070  2900               	goto	l1241
   888  0071  3A64               	xorlw	100	; case 100
   889  0072  1903               	skipnz
   890  0073  2878               	goto	l1201
   891  0074  3A0D               	xorlw	13	; case 105
   892  0075  1903               	skipnz
   893  0076  2878               	goto	l1201
   894  0077  283F               	goto	l1239
   895  0078                     l1201:	
   896                           
   897                           ;doprnt.c: 1262: {
   898                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   899  0078  0830               	movf	sprintf@ap,w
   900  0079  0086               	movwf	6
   901  007A  0187               	clrf	7
   902  007B  3F40               	moviw [0]fsr1
   903  007C  00B3               	movwf	sprintf@_val
   904  007D  3F41               	moviw [1]fsr1
   905  007E  00B4               	movwf	sprintf@_val+1
   906  007F  3002               	movlw	2
   907  0080  00AC               	movwf	??_sprintf
   908  0081  082C               	movf	??_sprintf,w
   909  0082  07B0               	addwf	sprintf@ap,f
   910                           
   911                           ;doprnt.c: 1270: if((int)_val._val < 0) {
   912  0083  1FB4               	btfss	sprintf@_val+1,7
   913  0084  288E               	goto	l1211
   914                           
   915                           ;doprnt.c: 1271: flag |= 0x03;
   916  0085  3003               	movlw	3
   917  0086  00AC               	movwf	??_sprintf
   918  0087  082C               	movf	??_sprintf,w
   919  0088  04B1               	iorwf	sprintf@flag,f
   920                           
   921                           ;doprnt.c: 1272: _val._val = -_val._val;
   922  0089  09B3               	comf	sprintf@_val,f
   923  008A  09B4               	comf	sprintf@_val+1,f
   924  008B  0AB3               	incf	sprintf@_val,f
   925  008C  1903               	skipnz
   926  008D  0AB4               	incf	sprintf@_val+1,f
   927  008E                     l1211:	
   928                           
   929                           ;doprnt.c: 1273: }
   930                           ;doprnt.c: 1275: }
   931                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   932  008E  01B7               	clrf	sprintf@c
   933  008F  0AB7               	incf	sprintf@c,f
   934  0090  0837               	movf	sprintf@c,w
   935  0091  3A05               	xorlw	5
   936  0092  1903               	btfsc	3,2
   937  0093  28B3               	goto	l1223
   938  0094                     l1215:	
   939                           
   940                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
   941  0094  0837               	movf	sprintf@c,w
   942  0095  00AC               	movwf	??_sprintf
   943  0096  01AD               	clrf	??_sprintf+1
   944  0097  35AC               	lslf	??_sprintf,f
   945  0098  0DAD               	rlf	??_sprintf+1,f
   946  0099  3000               	movlw	low (_dpowers| (0+32768))
   947  009A  072C               	addwf	??_sprintf,w
   948  009B  0084               	movwf	4
   949  009C  3082               	movlw	high (_dpowers| (0+32768))
   950  009D  3D2D               	addwfc	??_sprintf+1,w
   951  009E  0085               	movwf	5
   952  009F  3F00               	moviw [0]fsr0
   953  00A0  00AE               	movwf	??_sprintf+2
   954  00A1  3F01               	moviw [1]fsr0
   955  00A2  00AF               	movwf	??_sprintf+3
   956  00A3  082F               	movf	??_sprintf+3,w
   957  00A4  0234               	subwf	sprintf@_val+1,w
   958  00A5  1D03               	skipz
   959  00A6  28A9               	goto	u995
   960  00A7  082E               	movf	??_sprintf+2,w
   961  00A8  0233               	subwf	sprintf@_val,w
   962  00A9                     u995:	
   963  00A9  1C03               	btfss	3,0
   964  00AA  28B3               	goto	l1223
   965                           
   966                           ;doprnt.c: 1316: break;
   967  00AB  3001               	movlw	1
   968  00AC  00AC               	movwf	??_sprintf
   969  00AD  082C               	movf	??_sprintf,w
   970  00AE  07B7               	addwf	sprintf@c,f
   971  00AF  0837               	movf	sprintf@c,w
   972  00B0  3A05               	xorlw	5
   973  00B1  1D03               	skipz
   974  00B2  2894               	goto	l1215
   975  00B3                     l1223:	
   976                           
   977                           ;doprnt.c: 1431: {
   978                           ;doprnt.c: 1447: if(flag & 0x03)
   979  00B3  0831               	movf	sprintf@flag,w
   980  00B4  3903               	andlw	3
   981  00B5  1903               	btfsc	3,2
   982  00B6  28C1               	goto	l1229
   983                           
   984                           ;doprnt.c: 1448: ((*sp++ = ('-')));
   985  00B7  0826               	movf	sprintf@sp,w
   986  00B8  0086               	movwf	6
   987  00B9  0827               	movf	sprintf@sp+1,w
   988  00BA  0087               	movwf	7
   989  00BB  302D               	movlw	45
   990  00BC  0081               	movwf	1
   991  00BD  3001               	movlw	1
   992  00BE  07A6               	addwf	sprintf@sp,f
   993  00BF  3000               	movlw	0
   994  00C0  3DA7               	addwfc	sprintf@sp+1,f
   995  00C1                     l1229:	
   996                           
   997                           ;doprnt.c: 1478: }
   998                           ;doprnt.c: 1481: prec = c;
   999  00C1  0837               	movf	sprintf@c,w
  1000  00C2  00AC               	movwf	??_sprintf
  1001  00C3  082C               	movf	??_sprintf,w
  1002  00C4  00B2               	movwf	sprintf@prec
  1003  00C5                     l1237:	
  1004                           ;doprnt.c: 1483: while(prec--) {
  1005                           
  1006  00C5  30FF               	movlw	-1
  1007  00C6  00AC               	movwf	??_sprintf
  1008  00C7  082C               	movf	??_sprintf,w
  1009  00C8  07B2               	addwf	sprintf@prec,f
  1010  00C9  0832               	movf	sprintf@prec,w
  1011  00CA  3AFF               	xorlw	255
  1012  00CB  1903               	btfsc	3,2
  1013  00CC  283F               	goto	l1239
  1014                           
  1015                           ;doprnt.c: 1487: {
  1016                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  1017  00CD  300A               	movlw	10
  1018  00CE  00A0               	movwf	___lwmod@divisor
  1019  00CF  3000               	movlw	0
  1020  00D0  00A1               	movwf	___lwmod@divisor+1
  1021  00D1  0832               	movf	sprintf@prec,w
  1022  00D2  00AC               	movwf	??_sprintf
  1023  00D3  01AD               	clrf	??_sprintf+1
  1024  00D4  35AC               	lslf	??_sprintf,f
  1025  00D5  0DAD               	rlf	??_sprintf+1,f
  1026  00D6  3000               	movlw	low (_dpowers| (0+32768))
  1027  00D7  072C               	addwf	??_sprintf,w
  1028  00D8  0084               	movwf	4
  1029  00D9  3082               	movlw	high (_dpowers| (0+32768))
  1030  00DA  3D2D               	addwfc	??_sprintf+1,w
  1031  00DB  0085               	movwf	5
  1032  00DC  3F00               	moviw [0]fsr0
  1033  00DD  00F2               	movwf	___lwdiv@divisor
  1034  00DE  3F01               	moviw [1]fsr0
  1035  00DF  00F3               	movwf	___lwdiv@divisor+1
  1036  00E0  0834               	movf	sprintf@_val+1,w
  1037  00E1  01F5               	clrf	___lwdiv@dividend+1
  1038  00E2  07F5               	addwf	___lwdiv@dividend+1,f
  1039  00E3  0833               	movf	sprintf@_val,w
  1040  00E4  01F4               	clrf	___lwdiv@dividend
  1041  00E5  07F4               	addwf	___lwdiv@dividend,f
  1042  00E6  216D               	fcall	___lwdiv
  1043  00E7  0873               	movf	?___lwdiv+1,w
  1044  00E8  0020               	movlb	0	; select bank0
  1045  00E9  01A3               	clrf	___lwmod@dividend+1
  1046  00EA  07A3               	addwf	___lwmod@dividend+1,f
  1047  00EB  0872               	movf	?___lwdiv,w
  1048  00EC  01A2               	clrf	___lwmod@dividend
  1049  00ED  07A2               	addwf	___lwmod@dividend,f
  1050  00EE  21A3               	fcall	___lwmod
  1051  00EF  0020               	movlb	0	; select bank0
  1052  00F0  0820               	movf	?___lwmod,w
  1053  00F1  3E30               	addlw	48
  1054  00F2  00AE               	movwf	??_sprintf+2
  1055  00F3  082E               	movf	??_sprintf+2,w
  1056  00F4  00B7               	movwf	sprintf@c
  1057                           
  1058                           ;doprnt.c: 1532: }
  1059                           ;doprnt.c: 1533: ((*sp++ = (c)));
  1060  00F5  0826               	movf	sprintf@sp,w
  1061  00F6  0086               	movwf	6
  1062  00F7  0827               	movf	sprintf@sp+1,w
  1063  00F8  0087               	movwf	7
  1064  00F9  0837               	movf	sprintf@c,w
  1065  00FA  0081               	movwf	1
  1066  00FB  3001               	movlw	1
  1067  00FC  07A6               	addwf	sprintf@sp,f
  1068  00FD  3000               	movlw	0
  1069  00FE  3DA7               	addwfc	sprintf@sp+1,f
  1070  00FF  28C5               	goto	l1237
  1071  0100                     l1241:	
  1072                           ;doprnt.c: 1534: }
  1073                           ;doprnt.c: 1542: }
  1074                           ;doprnt.c: 1544: alldone:
  1075                           
  1076                           
  1077                           ;doprnt.c: 1547: *sp = 0;
  1078  0100  0826               	movf	sprintf@sp,w
  1079  0101  0086               	movwf	6
  1080  0102  0827               	movf	sprintf@sp+1,w
  1081  0103  0087               	movwf	7
  1082  0104  0181               	clrf	1
  1083  0105  0008               	return
  1084  0106                     __end_of_sprintf:	
  1085                           ;doprnt.c: 1549: return 0;
  1086                           ;	Return value of _sprintf is never used
  1087                           
  1088                           
  1089                           	psect	text3
  1090  01A3                     __ptext3:	
  1091 ;; *************** function ___lwmod *****************
  1092 ;; Defined at:
  1093 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  divisor         2    0[BANK0 ] unsigned int 
  1096 ;;  dividend        2    2[BANK0 ] unsigned int 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  counter         1    5[BANK0 ] unsigned char 
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  2    0[BANK0 ] unsigned int 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1
  1108 ;;      Params:         0       4       0
  1109 ;;      Locals:         0       1       0
  1110 ;;      Temps:          0       1       0
  1111 ;;      Totals:         0       6       0
  1112 ;;Total ram usage:        6 bytes
  1113 ;; Hardware stack levels used:    1
  1114 ;; Hardware stack levels required when called:    1
  1115 ;; This function calls:
  1116 ;;		Nothing
  1117 ;; This function is called by:
  1118 ;;		_sprintf
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           
  1123                           ;psect for function ___lwmod
  1124  01A3                     ___lwmod:	
  1125                           
  1126                           ;incstack = 0
  1127                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1128  01A3  0020               	movlb	0	; select bank0
  1129  01A4  0821               	movf	___lwmod@divisor+1,w
  1130  01A5  0420               	iorwf	___lwmod@divisor,w
  1131  01A6  1903               	skipnz
  1132  01A7  29CB               	goto	l1183
  1133  01A8  01A5               	clrf	___lwmod@counter
  1134  01A9  0AA5               	incf	___lwmod@counter,f
  1135  01AA                     l1173:	
  1136  01AA  1BA1               	btfsc	___lwmod@divisor+1,7
  1137  01AB  29B6               	goto	l1175
  1138  01AC  3001               	movlw	1
  1139  01AD                     u915:	
  1140  01AD  35A0               	lslf	___lwmod@divisor,f
  1141  01AE  0DA1               	rlf	___lwmod@divisor+1,f
  1142  01AF  0B89               	decfsz	9,f
  1143  01B0  29AD               	goto	u915
  1144  01B1  3001               	movlw	1
  1145  01B2  00A4               	movwf	??___lwmod
  1146  01B3  0824               	movf	??___lwmod,w
  1147  01B4  07A5               	addwf	___lwmod@counter,f
  1148  01B5  29AA               	goto	l1173
  1149  01B6                     l1175:	
  1150  01B6  0821               	movf	___lwmod@divisor+1,w
  1151  01B7  0223               	subwf	___lwmod@dividend+1,w
  1152  01B8  1D03               	skipz
  1153  01B9  29BC               	goto	u935
  1154  01BA  0820               	movf	___lwmod@divisor,w
  1155  01BB  0222               	subwf	___lwmod@dividend,w
  1156  01BC                     u935:	
  1157  01BC  1C03               	skipc
  1158  01BD  29C2               	goto	l1179
  1159  01BE  0820               	movf	___lwmod@divisor,w
  1160  01BF  02A2               	subwf	___lwmod@dividend,f
  1161  01C0  0821               	movf	___lwmod@divisor+1,w
  1162  01C1  3BA3               	subwfb	___lwmod@dividend+1,f
  1163  01C2                     l1179:	
  1164  01C2  3001               	movlw	1
  1165  01C3                     u945:	
  1166  01C3  36A1               	lsrf	___lwmod@divisor+1,f
  1167  01C4  0CA0               	rrf	___lwmod@divisor,f
  1168  01C5  0B89               	decfsz	9,f
  1169  01C6  29C3               	goto	u945
  1170  01C7  3001               	movlw	1
  1171  01C8  02A5               	subwf	___lwmod@counter,f
  1172  01C9  1D03               	btfss	3,2
  1173  01CA  29B6               	goto	l1175
  1174  01CB                     l1183:	
  1175  01CB  0823               	movf	___lwmod@dividend+1,w
  1176  01CC  01A1               	clrf	?___lwmod+1
  1177  01CD  07A1               	addwf	?___lwmod+1,f
  1178  01CE  0822               	movf	___lwmod@dividend,w
  1179  01CF  01A0               	clrf	?___lwmod
  1180  01D0  07A0               	addwf	?___lwmod,f
  1181  01D1  0008               	return
  1182  01D2                     __end_of___lwmod:	
  1183                           
  1184                           	psect	text4
  1185  016D                     __ptext4:	
  1186 ;; *************** function ___lwdiv *****************
  1187 ;; Defined at:
  1188 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  divisor         2    2[COMMON] unsigned int 
  1191 ;;  dividend        2    4[COMMON] unsigned int 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  quotient        2    7[COMMON] unsigned int 
  1194 ;;  counter         1    9[COMMON] unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  2    2[COMMON] unsigned int 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMMON   BANK0   BANK1
  1204 ;;      Params:         4       0       0
  1205 ;;      Locals:         3       0       0
  1206 ;;      Temps:          1       0       0
  1207 ;;      Totals:         8       0       0
  1208 ;;Total ram usage:        8 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; Hardware stack levels required when called:    1
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_sprintf
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           
  1219                           ;psect for function ___lwdiv
  1220  016D                     ___lwdiv:	
  1221                           
  1222                           ;incstack = 0
  1223                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1224  016D  01F7               	clrf	___lwdiv@quotient
  1225  016E  01F8               	clrf	___lwdiv@quotient+1
  1226  016F  0873               	movf	___lwdiv@divisor+1,w
  1227  0170  0472               	iorwf	___lwdiv@divisor,w
  1228  0171  1903               	skipnz
  1229  0172  299C               	goto	l1007
  1230  0173  01F9               	clrf	___lwdiv@counter
  1231  0174  0AF9               	incf	___lwdiv@counter,f
  1232  0175                     l995:	
  1233  0175  1BF3               	btfsc	___lwdiv@divisor+1,7
  1234  0176  2981               	goto	l997
  1235  0177  3001               	movlw	1
  1236  0178                     u655:	
  1237  0178  35F2               	lslf	___lwdiv@divisor,f
  1238  0179  0DF3               	rlf	___lwdiv@divisor+1,f
  1239  017A  0B89               	decfsz	9,f
  1240  017B  2978               	goto	u655
  1241  017C  3001               	movlw	1
  1242  017D  00F6               	movwf	??___lwdiv
  1243  017E  0876               	movf	??___lwdiv,w
  1244  017F  07F9               	addwf	___lwdiv@counter,f
  1245  0180  2975               	goto	l995
  1246  0181                     l997:	
  1247  0181  3001               	movlw	1
  1248  0182                     u675:	
  1249  0182  35F7               	lslf	___lwdiv@quotient,f
  1250  0183  0DF8               	rlf	___lwdiv@quotient+1,f
  1251  0184  0B89               	decfsz	9,f
  1252  0185  2982               	goto	u675
  1253  0186  0873               	movf	___lwdiv@divisor+1,w
  1254  0187  0275               	subwf	___lwdiv@dividend+1,w
  1255  0188  1D03               	skipz
  1256  0189  298C               	goto	u685
  1257  018A  0872               	movf	___lwdiv@divisor,w
  1258  018B  0274               	subwf	___lwdiv@dividend,w
  1259  018C                     u685:	
  1260  018C  1C03               	skipc
  1261  018D  2993               	goto	l1003
  1262  018E  0872               	movf	___lwdiv@divisor,w
  1263  018F  02F4               	subwf	___lwdiv@dividend,f
  1264  0190  0873               	movf	___lwdiv@divisor+1,w
  1265  0191  3BF5               	subwfb	___lwdiv@dividend+1,f
  1266  0192  1477               	bsf	___lwdiv@quotient,0
  1267  0193                     l1003:	
  1268  0193  3001               	movlw	1
  1269  0194                     u695:	
  1270  0194  36F3               	lsrf	___lwdiv@divisor+1,f
  1271  0195  0CF2               	rrf	___lwdiv@divisor,f
  1272  0196  0B89               	decfsz	9,f
  1273  0197  2994               	goto	u695
  1274  0198  3001               	movlw	1
  1275  0199  02F9               	subwf	___lwdiv@counter,f
  1276  019A  1D03               	btfss	3,2
  1277  019B  2981               	goto	l997
  1278  019C                     l1007:	
  1279  019C  0878               	movf	___lwdiv@quotient+1,w
  1280  019D  01F3               	clrf	?___lwdiv+1
  1281  019E  07F3               	addwf	?___lwdiv+1,f
  1282  019F  0877               	movf	___lwdiv@quotient,w
  1283  01A0  01F2               	clrf	?___lwdiv
  1284  01A1  07F2               	addwf	?___lwdiv,f
  1285  01A2  0008               	return
  1286  01A3                     __end_of___lwdiv:	
  1287                           
  1288                           	psect	intentry
  1289  0004                     __pintentry:	
  1290 ;; *************** function _InterTimer *****************
  1291 ;; Defined at:
  1292 ;;		line 99 in file "main.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;		None               void
  1299 ;; Registers used:
  1300 ;;		wreg, status,2, status,0
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMMON   BANK0   BANK1
  1306 ;;      Params:         0       0       0
  1307 ;;      Locals:         0       0       0
  1308 ;;      Temps:          2       0       0
  1309 ;;      Totals:         2       0       0
  1310 ;;Total ram usage:        2 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		Interrupt level 1
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319  0004                     _InterTimer:	
  1320                           
  1321                           ;incstack = 0
  1322                           ; Regs used in _InterTimer: [wreg+status,2+status,0]
  1323  0004  147E               	bsf	126,0	;set compiler interrupt flag
  1324  0005  3180               	pagesel	$
  1325  0006  0020               	movlb	0	; select bank0
  1326  0007  087F               	movf	127,w
  1327  0008  00F1               	movwf	??_InterTimer+1
  1328                           
  1329                           ;main.c: 100: if (TMR0IF == 1) {
  1330  0009  1D0B               	btfss	11,2	;volatile
  1331  000A  282B               	goto	i1l61
  1332                           
  1333                           ;main.c: 101: TMR0 = 61;
  1334  000B  303D               	movlw	61
  1335  000C  0095               	movwf	21	;volatile
  1336                           
  1337                           ;main.c: 102: Count++;
  1338  000D  3001               	movlw	1
  1339  000E  07BD               	addwf	_Count,f
  1340  000F  3000               	movlw	0
  1341  0010  3DBE               	addwfc	_Count+1,f
  1342                           
  1343                           ;main.c: 103: TMR0IF = 0;
  1344  0011  110B               	bcf	11,2	;volatile
  1345                           
  1346                           ;main.c: 104: if (Count >= 40) {
  1347  0012  083E               	movf	_Count+1,w
  1348  0013  3A80               	xorlw	128
  1349  0014  00F0               	movwf	??_InterTimer
  1350  0015  3080               	movlw	128
  1351  0016  0270               	subwf	??_InterTimer,w
  1352  0017  1D03               	skipz
  1353  0018  281B               	goto	u88_25
  1354  0019  3028               	movlw	40
  1355  001A  023D               	subwf	_Count,w
  1356  001B                     u88_25:	
  1357  001B  1C03               	skipc
  1358  001C  282B               	goto	i1l61
  1359                           
  1360                           ;main.c: 105: Count = 0;
  1361  001D  0020               	movlb	0	; select bank0
  1362  001E  01BD               	clrf	_Count
  1363  001F  01BE               	clrf	_Count+1
  1364                           
  1365                           ;main.c: 107: if (LEDflg == 0) LEDflg = 1;
  1366  0020  0840               	movf	_LEDflg+1,w
  1367  0021  043F               	iorwf	_LEDflg,w
  1368  0022  1D03               	skipz
  1369  0023  2829               	goto	i1l1163
  1370  0024  3001               	movlw	1
  1371  0025  00BF               	movwf	_LEDflg
  1372  0026  3000               	movlw	0
  1373  0027  00C0               	movwf	_LEDflg+1
  1374  0028  282B               	goto	i1l61
  1375  0029                     i1l1163:	
  1376                           
  1377                           ;main.c: 108: else LEDflg = 0;
  1378  0029  01BF               	clrf	_LEDflg
  1379  002A  01C0               	clrf	_LEDflg+1
  1380  002B                     i1l61:	
  1381  002B  0871               	movf	??_InterTimer+1,w
  1382  002C  0020               	movlb	0	; select bank0
  1383  002D  00FF               	movwf	127
  1384  002E  107E               	bcf	126,0	;clear compiler interrupt flag
  1385  002F  0009               	retfie
  1386  0030                     __end_of_InterTimer:	
  1387  007E                     btemp	set	126	;btemp
  1388  007E                     pic14e$flags	set	126
  1389  007E                     wtemp	set	126
  1390  007E                     wtemp0	set	126
  1391  0080                     wtemp1	set	128
  1392  0082                     wtemp2	set	130
  1393  0084                     wtemp3	set	132
  1394  0086                     wtemp4	set	134
  1395  0088                     wtemp5	set	136
  1396  007F                     wtemp6	set	127
  1397  007E                     ttemp	set	126
  1398  007E                     ttemp0	set	126
  1399  0081                     ttemp1	set	129
  1400  0084                     ttemp2	set	132
  1401  0087                     ttemp3	set	135
  1402  007F                     ttemp4	set	127
  1403  007E                     ltemp	set	126
  1404  007E                     ltemp0	set	126
  1405  0082                     ltemp1	set	130
  1406  0086                     ltemp2	set	134
  1407  0080                     ltemp3	set	128


Data Sizes:
    Strings     12
    Constant    10
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     29      33
    BANK1            32      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 0
		 -> main@str(BANK0[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S162$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    strOutUSART@str	PTR unsigned char  size(2) Largest target is 0
		 -> main@str(BANK0[0]), 


Critical Paths under _main in COMMON

    _sprintf->___lwdiv
    ___lwmod->___lwdiv

Critical Paths under _InterTimer in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1680
                                             24 BANK0      5     5      0
                            _sprintf
                        _strOutUSART
 ---------------------------------------------------------------------------------
 (1) _strOutUSART                                          2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    12      6    1456
                                              6 BANK0     18    12      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     362
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterTimer                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _strOutUSART

 _InterTimer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1D      21       6       41.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      2D       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Feb 13 11:33:33 2015

            __CFG_CP$OFF 0000                       l66 021D                      l995 0175  
                    _GIE 005F                      l997 0181                      _RA0 0060  
                    _RA1 0061                      _RA2 0062              _strOutUSART 0216  
                    _PR2 001B             __CFG_CPD$OFF 0000                      u655 0178  
                    u675 0182                      u915 01AD                      u685 018C  
                    u695 0194                      u935 01BC                      u945 01C3  
                    u995 00A9             __CFG_BORV$HI 0000                      wreg 0009  
           __CFG_LVP$OFF 0000                     l1003 0193                     l1007 019C  
                   l1201 0078                     l1211 008E                     l1223 00B3  
                   l1215 0094                     l1241 0100                     l1173 01AA  
                   l1237 00C5                     l1229 00C1                     l1175 01B6  
                   l1183 01CB                     l1239 003F                     l1097 0216  
                   l1179 01C2                     l1195 0060                     l1279 0135  
                   STR_1 020A                     u1047 012E                     u1057 013E  
                   u1067 0166                     i1l61 002B                     _TMR0 0015  
                   _TMR2 001A             __CFG_WRT$OFF 0000                     _main 0106  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf0 0000                     indf1 0001                     fsr1l 0006  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0030                     ttemp 007E                     wtemp 007E  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000             main@led_flag 007A  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _T2CON 001C  
        __end_of___lwdiv 01A3          __end_of___lwmod 01D2                    _RCSTA 019D  
                  _SPBRG 019B                    _PORTA 000C                    _TRISA 008C  
                  u88_25 001B                    _TXREG 019A                    _TXSTA 019E  
          __CFG_PWRTE$ON 0000                    _Count 003D           __CFG_FCMEN$OFF 0000  
        __end_of_dpowers 020A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __end_of_sprintf 0106          __initialization 0031             __end_of_main 016D  
                 ??_main 0038               _InterTimer 0004           __CFG_PLLEN$OFF 0000  
                 _CCPR1H 0292                   _CCPR1L 0291                   i1l1163 0029  
                 _LEDflg 003F                   _OSCCON 0099                   _TMR0IE 005D  
                 _TMR0IF 005A                   _TMR2ON 00E2           __CFG_STVREN$ON 0000  
              ??___lwdiv 0076                ??___lwmod 0024                ??_sprintf 002C  
__end_of__initialization 0037           __pcstackCOMMON 0070              ?_InterTimer 0070  
           ?_strOutUSART 0072               __pbssBANK0 003D               __pmaintext 0106  
             __pintentry 0004                  _CCP1CON 0293                  _RXDTSEL 08EF  
                _TXCKSEL 08EA      __size_of_InterTimer 002C                  ___lwdiv 016D  
                ___lwmod 01A3                  __ptext1 0216                  __ptext2 003A  
                __ptext3 01A3                  __ptext4 016D                  _dpowers 0200  
                main@ans 003B                  _sprintf 003A                  main@str 003B  
   end_of_initialization 0037             __pstringtext 0200         __CFG_FOSC$INTOSC 0000  
   __size_of_strOutUSART 0016             ??_InterTimer 0070      start_initialization 0031  
     __end_of_InterTimer 0030              __pbssCOMMON 007A                ___latbits 0000  
          __pcstackBANK0 0020      __end_of__stringdata 0216              sprintf@_val 0033  
            sprintf@flag 0031              sprintf@prec 0032         ___lwdiv@dividend 0074  
               ?___lwdiv 0072                 ?___lwmod 0020         ___lwdiv@quotient 0077  
               ?_sprintf 0026                 _PIR1bits 0011              __stringdata 020A  
       __size_of___lwdiv 0036         __size_of___lwmod 002F            ??_strOutUSART 0074  
             _ANSELAbits 018C          ___lwdiv@divisor 0072          ___lwdiv@counter 0079  
       __size_of_sprintf 00CC            __size_of_main 0067           strOutUSART@str 0072  
            pic14e$flags 007E      __end_of_strOutUSART 022C                 intlevel1 0000  
              sprintf@ap 0030                sprintf@sp 0026         ___lwmod@dividend 0022  
      __CFG_CLKOUTEN$OFF 0000               _OPTION_REG 0095                 sprintf@c 0037  
               sprintf@f 0028          ___lwmod@divisor 0020          ___lwmod@counter 0025  
