

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Feb 21 17:45:31 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     	;# 
    13  0001                     	;# 
    14  0002                     	;# 
    15  0003                     	;# 
    16  0004                     	;# 
    17  0005                     	;# 
    18  0006                     	;# 
    19  0007                     	;# 
    20  0008                     	;# 
    21  0009                     	;# 
    22  000A                     	;# 
    23  000B                     	;# 
    24  000C                     	;# 
    25  0011                     	;# 
    26  0012                     	;# 
    27  0015                     	;# 
    28  0016                     	;# 
    29  0016                     	;# 
    30  0017                     	;# 
    31  0018                     	;# 
    32  0019                     	;# 
    33  001A                     	;# 
    34  001B                     	;# 
    35  001C                     	;# 
    36  001E                     	;# 
    37  001F                     	;# 
    38  008C                     	;# 
    39  0091                     	;# 
    40  0092                     	;# 
    41  0095                     	;# 
    42  0096                     	;# 
    43  0097                     	;# 
    44  0098                     	;# 
    45  0099                     	;# 
    46  009A                     	;# 
    47  009B                     	;# 
    48  009B                     	;# 
    49  009C                     	;# 
    50  009D                     	;# 
    51  009E                     	;# 
    52  010C                     	;# 
    53  0111                     	;# 
    54  0112                     	;# 
    55  0115                     	;# 
    56  0116                     	;# 
    57  0117                     	;# 
    58  0118                     	;# 
    59  0119                     	;# 
    60  011A                     	;# 
    61  011B                     	;# 
    62  011D                     	;# 
    63  011D                     	;# 
    64  018C                     	;# 
    65  0191                     	;# 
    66  0191                     	;# 
    67  0192                     	;# 
    68  0193                     	;# 
    69  0193                     	;# 
    70  0193                     	;# 
    71  0194                     	;# 
    72  0195                     	;# 
    73  0196                     	;# 
    74  0199                     	;# 
    75  019A                     	;# 
    76  019B                     	;# 
    77  019B                     	;# 
    78  019B                     	;# 
    79  019B                     	;# 
    80  019C                     	;# 
    81  019C                     	;# 
    82  019D                     	;# 
    83  019E                     	;# 
    84  019F                     	;# 
    85  020C                     	;# 
    86  0211                     	;# 
    87  0211                     	;# 
    88  0212                     	;# 
    89  0212                     	;# 
    90  0213                     	;# 
    91  0213                     	;# 
    92  0214                     	;# 
    93  0214                     	;# 
    94  0215                     	;# 
    95  0215                     	;# 
    96  0215                     	;# 
    97  0216                     	;# 
    98  0216                     	;# 
    99  0217                     	;# 
   100  0217                     	;# 
   101  0291                     	;# 
   102  0291                     	;# 
   103  0292                     	;# 
   104  0293                     	;# 
   105  0294                     	;# 
   106  0295                     	;# 
   107  0295                     	;# 
   108  0296                     	;# 
   109  0391                     	;# 
   110  0392                     	;# 
   111  0393                     	;# 
   112  039A                     	;# 
   113  039C                     	;# 
   114  039D                     	;# 
   115  039E                     	;# 
   116  039F                     	;# 
   117  0FE4                     	;# 
   118  0FE5                     	;# 
   119  0FE6                     	;# 
   120  0FE7                     	;# 
   121  0FE8                     	;# 
   122  0FE9                     	;# 
   123  0FEA                     	;# 
   124  0FEB                     	;# 
   125  0FED                     	;# 
   126  0FEE                     	;# 
   127  0FEF                     	;# 
   128                           
   129                           	psect	stringtext
   130  0100                     __pstringtext:	
   131  0100                     _sig:	
   132  0100  3400               	retlw	0
   133  0101  3400               	retlw	0
   134  0102  3401               	retlw	1
   135  0103  3400               	retlw	0
   136  0104  3401               	retlw	1
   137  0105  3400               	retlw	0
   138  0106  3400               	retlw	0
   139  0107  3400               	retlw	0
   140  0108                     __end_of_sig:	
   141  0011                     _PIR1bits	set	17
   142  000C                     _PORTA	set	12
   143  0015                     _TMR0	set	21
   144  005F                     _GIE	set	95
   145  0060                     _RA0	set	96
   146  0061                     _RA1	set	97
   147  0062                     _RA2	set	98
   148  0065                     _RA5	set	101
   149  005D                     _TMR0IE	set	93
   150  005A                     _TMR0IF	set	90
   151  0095                     _OPTION_REG	set	149
   152  0099                     _OSCCON	set	153
   153  008C                     _TRISA	set	140
   154  08EF                     _RXDTSEL	set	2287
   155  08EA                     _TXCKSEL	set	2282
   156  018C                     _ANSELAbits	set	396
   157  019D                     _RCSTA	set	413
   158  019B                     _SPBRG	set	411
   159  019A                     _TXREG	set	410
   160  019E                     _TXSTA	set	414
   161                           
   162                           ; #config settings
   163  0000                     
   164                           	psect	cinit
   165  0030                     start_initialization:	
   166  0030                     __initialization:	
   167                           
   168                           ; Clear objects allocated to COMMON
   169  0030  01F0               	clrf	__pbssCOMMON& (0+127)
   170  0031  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   171  0032  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   172  0033  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   173                           
   174                           ; Clear objects allocated to BANK0
   175  0034  01A0               	clrf	__pbssBANK0& (0+127)
   176  0035  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   177  0036  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   178  0037  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   179  0038  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   180  0039  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   181  003A  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   182  003B  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   183  003C                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186  003C                     __end_of__initialization:	
   187  003C  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   188  003D  0020               	movlb	0
   189  003E  283F               	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	bssCOMMON
   192  0070                     __pbssCOMMON:	
   193  0070                     _Count:	
   194  0070                     	ds	2
   195  0072                     _LEDflg:	
   196  0072                     	ds	2
   197                           
   198                           	psect	bssBANK0
   199  0020                     __pbssBANK0:	
   200  0020                     _data:	
   201  0020                     	ds	8
   202                           
   203                           	psect	cstackCOMMON
   204  0074                     __pcstackCOMMON:	
   205  0074                     ?_main:	
   206  0074                     ?_InterTimer:	
   207                           ; 0 bytes @ 0x0
   208                           
   209  0074                     ??_InterTimer:	
   210                           ; 0 bytes @ 0x0
   211                           
   212                           
   213                           ; 0 bytes @ 0x0
   214  0074                     	ds	2
   215  0076                     ??_main:	
   216                           
   217                           ; 0 bytes @ 0x2
   218  0076                     	ds	2
   219                           
   220                           	psect	maintext
   221  003F                     __pmaintext:	
   222 ;;
   223 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   224 ;;
   225 ;; *************** function _main *****************
   226 ;; Defined at:
   227 ;;		line 56 in file "main.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;		None
   232 ;; Return value:  Size  Location     Type
   233 ;;		None               void
   234 ;; Registers used:
   235 ;;		wreg, status,2, status,0
   236 ;; Tracked objects:
   237 ;;		On entry : 17F/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMMON   BANK0   BANK1
   241 ;;      Params:         0       0       0
   242 ;;      Locals:         0       0       0
   243 ;;      Temps:          2       0       0
   244 ;;      Totals:         2       0       0
   245 ;;Total ram usage:        2 bytes
   246 ;; Hardware stack levels required when called:    1
   247 ;; This function calls:
   248 ;;		Nothing
   249 ;; This function is called by:
   250 ;;		Startup code after reset
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254                           
   255                           ;psect for function _main
   256  003F                     _main:	
   257                           
   258                           ;main.c: 59: OSCCON = 0b01110010;
   259                           
   260                           ;incstack = 0
   261                           ; Regs used in _main: [wreg+status,2+status,0]
   262  003F  3072               	movlw	114
   263  0040  0021               	movlb	1	; select bank1
   264  0041  0099               	movwf	25	;volatile
   265                           
   266                           ;main.c: 60: ANSELAbits.ANSELA = 0b00000000;
   267  0042  30E0               	movlw	-32
   268  0043  0023               	movlb	3	; select bank3
   269  0044  058C               	andwf	12,f	;volatile
   270                           
   271                           ;main.c: 61: TRISA = 0b00001100;
   272  0045  300C               	movlw	12
   273  0046  0021               	movlb	1	; select bank1
   274  0047  008C               	movwf	12	;volatile
   275                           
   276                           ;main.c: 62: PORTA = 0b00000000;
   277  0048  0020               	movlb	0	; select bank0
   278  0049  018C               	clrf	12	;volatile
   279                           
   280                           ;main.c: 65: RXDTSEL = 1;
   281  004A  0022               	movlb	2	; select bank2
   282  004B  179D               	bsf	29,7	;volatile
   283                           
   284                           ;main.c: 66: TXCKSEL = 1;
   285  004C  151D               	bsf	29,2	;volatile
   286                           
   287                           ;main.c: 67: TXSTA = 0b00100100;
   288  004D  3024               	movlw	36
   289  004E  0023               	movlb	3	; select bank3
   290  004F  009E               	movwf	30	;volatile
   291                           
   292                           ;main.c: 68: RCSTA = 0b10010000;
   293  0050  3090               	movlw	144
   294  0051  009D               	movwf	29	;volatile
   295                           
   296                           ;main.c: 69: SPBRG = 51;
   297  0052  3033               	movlw	51
   298  0053  009B               	movwf	27	;volatile
   299                           
   300                           ;main.c: 71: OPTION_REG = 0b00000110;
   301  0054  3006               	movlw	6
   302  0055  0021               	movlb	1	; select bank1
   303  0056  0095               	movwf	21	;volatile
   304                           
   305                           ;main.c: 72: TMR0 = 61;
   306  0057  303D               	movlw	61
   307  0058  0020               	movlb	0	; select bank0
   308  0059  0095               	movwf	21	;volatile
   309                           
   310                           ;main.c: 73: TMR0IF = 0;
   311  005A  110B               	bcf	11,2	;volatile
   312                           
   313                           ;main.c: 74: Count = 0;
   314  005B  01F0               	clrf	_Count
   315  005C  01F1               	clrf	_Count+1
   316                           
   317                           ;main.c: 75: TMR0IE = 1;
   318  005D  168B               	bsf	11,5	;volatile
   319                           
   320                           ;main.c: 76: GIE = 1;
   321  005E  178B               	bsf	11,7	;volatile
   322                           
   323                           ;main.c: 78: _delay((unsigned long)((50)*(8000000/4000.0)));
   324  005F  3082               	movlw	130
   325  0060  00F7               	movwf	??_main+1
   326  0061  30DD               	movlw	221
   327  0062  00F6               	movwf	??_main
   328  0063                     u117:	
   329  0063  0BF6               	decfsz	??_main,f
   330  0064  2863               	goto	u117
   331  0065  0BF7               	decfsz	??_main+1,f
   332  0066  2863               	goto	u117
   333  0067  3200               	nop2
   334  0068                     l573:	
   335                           ;main.c: 82: while (1) {
   336                           
   337                           
   338                           ;main.c: 83: RA0 = 1;
   339  0068  0020               	movlb	0	; select bank0
   340  0069  140C               	bsf	12,0	;volatile
   341  006A                     l54:	
   342                           ;main.c: 85: while (RA2);
   343                           
   344  006A  190C               	btfsc	12,2	;volatile
   345  006B  286A               	goto	l54
   346  006C                     l57:	
   347                           ;main.c: 87: while (!RA2);
   348                           
   349  006C  1D0C               	btfss	12,2	;volatile
   350  006D  286C               	goto	l57
   351                           
   352                           ;main.c: 89: if (RA2 == 1) {
   353  006E  1D0C               	btfss	12,2	;volatile
   354  006F  2879               	goto	l60
   355                           
   356                           ;main.c: 90: RA5 = 1;
   357  0070  168C               	bsf	12,5	;volatile
   358                           
   359                           ;main.c: 91: _delay((unsigned long)((600)*(8000000/4000000.0)));
   360  0071  30EF               	movlw	239
   361  0072  00F6               	movwf	??_main
   362  0073                     u127:	
   363  0073  3200               	nop2
   364  0074  0BF6               	decfsz	??_main,f
   365  0075  2873               	goto	u127
   366  0076  3200               	nop2	;nop
   367  0077  3200               	nop2	;nop
   368                           
   369                           ;main.c: 92: } else {
   370  0078  287A               	goto	l61
   371  0079                     l60:	
   372                           
   373                           ;main.c: 93: RA5 = 0;
   374  0079  128C               	bcf	12,5	;volatile
   375  007A                     l61:	
   376                           
   377                           ;main.c: 94: }
   378                           ;main.c: 96: if (RA2 == 0) {
   379  007A  0020               	movlb	0	; select bank0
   380  007B  190C               	btfsc	12,2	;volatile
   381  007C  2887               	goto	l62
   382                           
   383                           ;main.c: 97: _delay((unsigned long)((600)*(8000000/4000000.0)));
   384  007D  30EF               	movlw	239
   385  007E  00F6               	movwf	??_main
   386  007F                     u137:	
   387  007F  3200               	nop2
   388  0080  0BF6               	decfsz	??_main,f
   389  0081  287F               	goto	u137
   390  0082  3200               	nop2	;nop
   391  0083  3200               	nop2	;nop
   392                           
   393                           ;main.c: 98: RA5 = 1;
   394  0084  0020               	movlb	0	; select bank0
   395  0085  168C               	bsf	12,5	;volatile
   396                           
   397                           ;main.c: 99: } else {
   398  0086  2888               	goto	l583
   399  0087                     l62:	
   400                           
   401                           ;main.c: 100: RA5 = 0;
   402  0087  128C               	bcf	12,5	;volatile
   403  0088                     l583:	
   404                           
   405                           ;main.c: 101: }
   406                           ;main.c: 104: if (LEDflg == 0) RA1 = 0;
   407  0088  0873               	movf	_LEDflg+1,w
   408  0089  0472               	iorwf	_LEDflg,w
   409  008A  1D03               	skipz
   410  008B  288E               	goto	l64
   411  008C  108C               	bcf	12,1	;volatile
   412  008D  2868               	goto	l573
   413  008E                     l64:	
   414                           
   415                           ;main.c: 105: else RA1 = 1;
   416  008E  148C               	bsf	12,1	;volatile
   417  008F  2868               	goto	l573
   418  0090                     __end_of_main:	
   419                           
   420                           	psect	intentry
   421  0004                     __pintentry:	
   422 ;; *************** function _InterTimer *****************
   423 ;; Defined at:
   424 ;;		line 117 in file "main.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;		None               void
   431 ;; Registers used:
   432 ;;		wreg, status,2, status,0
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1
   438 ;;      Params:         0       0       0
   439 ;;      Locals:         0       0       0
   440 ;;      Temps:          2       0       0
   441 ;;      Totals:         2       0       0
   442 ;;Total ram usage:        2 bytes
   443 ;; Hardware stack levels used:    1
   444 ;; This function calls:
   445 ;;		Nothing
   446 ;; This function is called by:
   447 ;;		Interrupt level 1
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451  0004                     _InterTimer:	
   452                           
   453                           ;incstack = 0
   454                           ; Regs used in _InterTimer: [wreg+status,2+status,0]
   455  0004  147E               	bsf	126,0	;set compiler interrupt flag
   456  0005  3180               	pagesel	$
   457  0006  0020               	movlb	0	; select bank0
   458  0007  087F               	movf	127,w
   459  0008  00F5               	movwf	??_InterTimer+1
   460                           
   461                           ;main.c: 118: if (TMR0IF == 1) {
   462  0009  1D0B               	btfss	11,2	;volatile
   463  000A  282A               	goto	i1l84
   464                           
   465                           ;main.c: 119: TMR0 = 61;
   466  000B  303D               	movlw	61
   467  000C  0095               	movwf	21	;volatile
   468                           
   469                           ;main.c: 120: Count++;
   470  000D  3001               	movlw	1
   471  000E  07F0               	addwf	_Count,f
   472  000F  3000               	movlw	0
   473  0010  3DF1               	addwfc	_Count+1,f
   474                           
   475                           ;main.c: 121: TMR0IF = 0;
   476  0011  110B               	bcf	11,2	;volatile
   477                           
   478                           ;main.c: 122: if (Count >= 40) {
   479  0012  0871               	movf	_Count+1,w
   480  0013  3A80               	xorlw	128
   481  0014  00F4               	movwf	??_InterTimer
   482  0015  3080               	movlw	128
   483  0016  0274               	subwf	??_InterTimer,w
   484  0017  1D03               	skipz
   485  0018  281B               	goto	u9_25
   486  0019  3028               	movlw	40
   487  001A  0270               	subwf	_Count,w
   488  001B                     u9_25:	
   489  001B  1C03               	skipc
   490  001C  282A               	goto	i1l84
   491                           
   492                           ;main.c: 123: Count = 0;
   493  001D  01F0               	clrf	_Count
   494  001E  01F1               	clrf	_Count+1
   495                           
   496                           ;main.c: 125: if (LEDflg == 0) LEDflg = 1;
   497  001F  0873               	movf	_LEDflg+1,w
   498  0020  0472               	iorwf	_LEDflg,w
   499  0021  1D03               	skipz
   500  0022  2828               	goto	i1l607
   501  0023  3001               	movlw	1
   502  0024  00F2               	movwf	_LEDflg
   503  0025  3000               	movlw	0
   504  0026  00F3               	movwf	_LEDflg+1
   505  0027  282A               	goto	i1l84
   506  0028                     i1l607:	
   507                           
   508                           ;main.c: 126: else LEDflg = 0;
   509  0028  01F2               	clrf	_LEDflg
   510  0029  01F3               	clrf	_LEDflg+1
   511  002A                     i1l84:	
   512  002A  0875               	movf	??_InterTimer+1,w
   513  002B  0020               	movlb	0	; select bank0
   514  002C  00FF               	movwf	127
   515  002D  107E               	bcf	126,0	;clear compiler interrupt flag
   516  002E  0009               	retfie
   517  002F                     __end_of_InterTimer:	
   518  007E                     btemp	set	126	;btemp
   519  007E                     pic14e$flags	set	126
   520  007E                     wtemp	set	126
   521  007E                     wtemp0	set	126
   522  0080                     wtemp1	set	128
   523  0082                     wtemp2	set	130
   524  0084                     wtemp3	set	132
   525  0086                     wtemp4	set	134
   526  0088                     wtemp5	set	136
   527  007F                     wtemp6	set	127
   528  007E                     ttemp	set	126
   529  007E                     ttemp0	set	126
   530  0081                     ttemp1	set	129
   531  0084                     ttemp2	set	132
   532  0087                     ttemp3	set	135
   533  007F                     ttemp4	set	127
   534  007E                     ltemp	set	126
   535  007E                     ltemp0	set	126
   536  0082                     ltemp1	set	130
   537  0086                     ltemp2	set	134
   538  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    8
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       8
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterTimer in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _InterTimer                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _InterTimer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      10       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       8       6       10.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      10       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Feb 21 17:45:31 2015

            __CFG_CP$OFF 0000                       l60 0079                       l61 007A  
                     l62 0087                       l54 006A                       l64 008E  
                     l57 006C                      l573 0068                      l583 0088  
                    _GIE 005F                      _RA0 0060                      _RA1 0061  
                    _RA2 0062                      _RA5 0065                      u117 0063  
                    u127 0073                      u137 007F             __CFG_CPD$OFF 0000  
                    _sig 0100             __CFG_BORV$HI 0000             __CFG_LVP$OFF 0000  
                   i1l84 002A                     _TMR0 0015                     u9_25 001B  
           __CFG_WRT$OFF 0000                     _data 0020                     _main 003F  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 002F                     ttemp 007E                     wtemp 007E  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000                    ?_main 0074  
          __CFG_WDTE$OFF 0000                    i1l607 0028                    _RCSTA 019D  
                  _SPBRG 019B                    _PORTA 000C                    _TRISA 008C  
                  _TXREG 019A                    _TXSTA 019E            __CFG_PWRTE$ON 0000  
                  _Count 0070           __CFG_FCMEN$OFF 0000                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 0030             __end_of_main 0090                   ??_main 0076  
             _InterTimer 0004           __CFG_PLLEN$OFF 0000                   _LEDflg 0072  
                 _OSCCON 0099                   _TMR0IE 005D                   _TMR0IF 005A  
         __CFG_STVREN$ON 0000  __end_of__initialization 003C           __pcstackCOMMON 0074  
            ?_InterTimer 0074               __pbssBANK0 0020               __pmaintext 003F  
             __pintentry 0004                  _RXDTSEL 08EF                  _TXCKSEL 08EA  
    __size_of_InterTimer 002B     end_of_initialization 003C             __pstringtext 0100  
       __CFG_FOSC$INTOSC 0000             ??_InterTimer 0074      start_initialization 0030  
            __end_of_sig 0108       __end_of_InterTimer 002F              __pbssCOMMON 0070  
              ___latbits 0000                 _PIR1bits 0011               _ANSELAbits 018C  
          __size_of_main 0051              pic14e$flags 007E                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000               _OPTION_REG 0095  
