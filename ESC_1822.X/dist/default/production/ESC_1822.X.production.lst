

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Feb 25 16:01:45 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     	;# 
    13  0001                     	;# 
    14  0002                     	;# 
    15  0003                     	;# 
    16  0004                     	;# 
    17  0005                     	;# 
    18  0006                     	;# 
    19  0007                     	;# 
    20  0008                     	;# 
    21  0009                     	;# 
    22  000A                     	;# 
    23  000B                     	;# 
    24  000C                     	;# 
    25  0011                     	;# 
    26  0012                     	;# 
    27  0015                     	;# 
    28  0016                     	;# 
    29  0016                     	;# 
    30  0017                     	;# 
    31  0018                     	;# 
    32  0019                     	;# 
    33  001A                     	;# 
    34  001B                     	;# 
    35  001C                     	;# 
    36  001E                     	;# 
    37  001F                     	;# 
    38  008C                     	;# 
    39  0091                     	;# 
    40  0092                     	;# 
    41  0095                     	;# 
    42  0096                     	;# 
    43  0097                     	;# 
    44  0098                     	;# 
    45  0099                     	;# 
    46  009A                     	;# 
    47  009B                     	;# 
    48  009B                     	;# 
    49  009C                     	;# 
    50  009D                     	;# 
    51  009E                     	;# 
    52  010C                     	;# 
    53  0111                     	;# 
    54  0112                     	;# 
    55  0115                     	;# 
    56  0116                     	;# 
    57  0117                     	;# 
    58  0118                     	;# 
    59  0119                     	;# 
    60  011A                     	;# 
    61  011B                     	;# 
    62  011D                     	;# 
    63  011D                     	;# 
    64  018C                     	;# 
    65  0191                     	;# 
    66  0191                     	;# 
    67  0192                     	;# 
    68  0193                     	;# 
    69  0193                     	;# 
    70  0193                     	;# 
    71  0194                     	;# 
    72  0195                     	;# 
    73  0196                     	;# 
    74  0199                     	;# 
    75  019A                     	;# 
    76  019B                     	;# 
    77  019B                     	;# 
    78  019B                     	;# 
    79  019B                     	;# 
    80  019C                     	;# 
    81  019C                     	;# 
    82  019D                     	;# 
    83  019E                     	;# 
    84  019F                     	;# 
    85  020C                     	;# 
    86  0211                     	;# 
    87  0211                     	;# 
    88  0212                     	;# 
    89  0212                     	;# 
    90  0213                     	;# 
    91  0213                     	;# 
    92  0214                     	;# 
    93  0214                     	;# 
    94  0215                     	;# 
    95  0215                     	;# 
    96  0215                     	;# 
    97  0216                     	;# 
    98  0216                     	;# 
    99  0217                     	;# 
   100  0217                     	;# 
   101  0291                     	;# 
   102  0291                     	;# 
   103  0292                     	;# 
   104  0293                     	;# 
   105  0294                     	;# 
   106  0295                     	;# 
   107  0295                     	;# 
   108  0296                     	;# 
   109  0391                     	;# 
   110  0392                     	;# 
   111  0393                     	;# 
   112  039A                     	;# 
   113  039C                     	;# 
   114  039D                     	;# 
   115  039E                     	;# 
   116  039F                     	;# 
   117  0FE4                     	;# 
   118  0FE5                     	;# 
   119  0FE6                     	;# 
   120  0FE7                     	;# 
   121  0FE8                     	;# 
   122  0FE9                     	;# 
   123  0FEA                     	;# 
   124  0FEB                     	;# 
   125  0FED                     	;# 
   126  0FEE                     	;# 
   127  0FEF                     	;# 
   128                           
   129                           	psect	stringtext
   130  0100                     __pstringtext:	
   131  0100                     _sig:	
   132  0100  3400               	retlw	0
   133  0101  3400               	retlw	0
   134  0102  3401               	retlw	1
   135  0103  3400               	retlw	0
   136  0104  3401               	retlw	1
   137  0105  3400               	retlw	0
   138  0106  3400               	retlw	0
   139  0107  3400               	retlw	0
   140  0108                     __end_of_sig:	
   141  0011                     _PIR1bits	set	17
   142  000C                     _PORTA	set	12
   143  0015                     _TMR0	set	21
   144  005F                     _GIE	set	95
   145  0060                     _RA0	set	96
   146  0061                     _RA1	set	97
   147  0062                     _RA2	set	98
   148  0065                     _RA5	set	101
   149  005D                     _TMR0IE	set	93
   150  005A                     _TMR0IF	set	90
   151  0095                     _OPTION_REG	set	149
   152  0099                     _OSCCON	set	153
   153  008C                     _TRISA	set	140
   154  08EF                     _RXDTSEL	set	2287
   155  08EA                     _TXCKSEL	set	2282
   156  018C                     _ANSELAbits	set	396
   157  019D                     _RCSTA	set	413
   158  019B                     _SPBRG	set	411
   159  019A                     _TXREG	set	410
   160  019E                     _TXSTA	set	414
   161                           
   162                           ; #config settings
   163  0000                     
   164                           	psect	cinit
   165  0030                     start_initialization:	
   166  0030                     __initialization:	
   167                           
   168                           ; Clear objects allocated to COMMON
   169  0030  01F6               	clrf	__pbssCOMMON& (0+127)
   170  0031  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   171  0032  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   172  0033  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   173                           
   174                           ; Clear objects allocated to BANK0
   175  0034  01A0               	clrf	__pbssBANK0& (0+127)
   176  0035  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   177  0036  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   178  0037  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   179  0038  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   180  0039  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   181  003A  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   182  003B  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   183  003C                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186  003C                     __end_of__initialization:	
   187  003C  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   188  003D  0020               	movlb	0
   189  003E  283F               	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	bssCOMMON
   192  0076                     __pbssCOMMON:	
   193  0076                     _Count:	
   194  0076                     	ds	2
   195  0078                     _LEDflg:	
   196  0078                     	ds	2
   197                           
   198                           	psect	bssBANK0
   199  0020                     __pbssBANK0:	
   200  0020                     _data:	
   201  0020                     	ds	8
   202                           
   203                           	psect	cstackCOMMON
   204  0070                     __pcstackCOMMON:	
   205  0070                     ?_InterTimer:	
   206  0070                     ??_InterTimer:	
   207                           ; 0 bytes @ 0x0
   208                           
   209  0070                     ?_main:	
   210                           ; 0 bytes @ 0x0
   211                           
   212                           
   213                           ; 2 bytes @ 0x0
   214  0070                     	ds	2
   215  0072                     ??_main:	
   216                           
   217                           ; 0 bytes @ 0x2
   218  0072                     	ds	2
   219  0074                     main@cnt:	
   220                           
   221                           ; 2 bytes @ 0x4
   222  0074                     	ds	2
   223                           
   224                           	psect	maintext
   225  003F                     __pmaintext:	
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 56 in file "main.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;  cnt             2    4[COMMON] int 
   236 ;; Return value:  Size  Location     Type
   237 ;;                  2   52[COMMON] int 
   238 ;; Registers used:
   239 ;;		wreg, status,2, status,0
   240 ;; Tracked objects:
   241 ;;		On entry : 17F/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMMON   BANK0   BANK1
   245 ;;      Params:         0       0       0
   246 ;;      Locals:         2       0       0
   247 ;;      Temps:          2       0       0
   248 ;;      Totals:         4       0       0
   249 ;;Total ram usage:        4 bytes
   250 ;; Hardware stack levels required when called:    1
   251 ;; This function calls:
   252 ;;		Nothing
   253 ;; This function is called by:
   254 ;;		Startup code after reset
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           
   259                           ;psect for function _main
   260  003F                     _main:	
   261                           
   262                           ;main.c: 58: int cnt = 0;
   263                           
   264                           ;incstack = 0
   265                           ; Regs used in _main: [wreg+status,2+status,0]
   266  003F  01F4               	clrf	main@cnt
   267  0040  01F5               	clrf	main@cnt+1
   268                           
   269                           ;main.c: 60: OSCCON = 0b01110010;
   270  0041  3072               	movlw	114
   271  0042  0021               	movlb	1	; select bank1
   272  0043  0099               	movwf	25	;volatile
   273                           
   274                           ;main.c: 61: ANSELAbits.ANSELA = 0b00000000;
   275  0044  30E0               	movlw	-32
   276  0045  0023               	movlb	3	; select bank3
   277  0046  058C               	andwf	12,f	;volatile
   278                           
   279                           ;main.c: 62: TRISA = 0b00001100;
   280  0047  300C               	movlw	12
   281  0048  0021               	movlb	1	; select bank1
   282  0049  008C               	movwf	12	;volatile
   283                           
   284                           ;main.c: 63: PORTA = 0b00000000;
   285  004A  0020               	movlb	0	; select bank0
   286  004B  018C               	clrf	12	;volatile
   287                           
   288                           ;main.c: 66: RXDTSEL = 1;
   289  004C  0022               	movlb	2	; select bank2
   290  004D  179D               	bsf	29,7	;volatile
   291                           
   292                           ;main.c: 67: TXCKSEL = 1;
   293  004E  151D               	bsf	29,2	;volatile
   294                           
   295                           ;main.c: 68: TXSTA = 0b00100100;
   296  004F  3024               	movlw	36
   297  0050  0023               	movlb	3	; select bank3
   298  0051  009E               	movwf	30	;volatile
   299                           
   300                           ;main.c: 69: RCSTA = 0b10010000;
   301  0052  3090               	movlw	144
   302  0053  009D               	movwf	29	;volatile
   303                           
   304                           ;main.c: 70: SPBRG = 51;
   305  0054  3033               	movlw	51
   306  0055  009B               	movwf	27	;volatile
   307                           
   308                           ;main.c: 72: OPTION_REG = 0b00000110;
   309  0056  3006               	movlw	6
   310  0057  0021               	movlb	1	; select bank1
   311  0058  0095               	movwf	21	;volatile
   312                           
   313                           ;main.c: 73: TMR0 = 61;
   314  0059  303D               	movlw	61
   315  005A  0020               	movlb	0	; select bank0
   316  005B  0095               	movwf	21	;volatile
   317                           
   318                           ;main.c: 74: TMR0IF = 0;
   319  005C  110B               	bcf	11,2	;volatile
   320                           
   321                           ;main.c: 75: Count = 0;
   322  005D  01F6               	clrf	_Count
   323  005E  01F7               	clrf	_Count+1
   324                           
   325                           ;main.c: 76: TMR0IE = 1;
   326  005F  168B               	bsf	11,5	;volatile
   327                           
   328                           ;main.c: 77: GIE = 1;
   329  0060  178B               	bsf	11,7	;volatile
   330                           
   331                           ;main.c: 79: _delay((unsigned long)((50)*(8000000/4000.0)));
   332  0061  3082               	movlw	130
   333  0062  00F3               	movwf	??_main+1
   334  0063  30DD               	movlw	221
   335  0064  00F2               	movwf	??_main
   336  0065                     u137:	
   337  0065  0BF2               	decfsz	??_main,f
   338  0066  2865               	goto	u137
   339  0067  0BF3               	decfsz	??_main+1,f
   340  0068  2865               	goto	u137
   341  0069  3200               	nop2
   342                           
   343                           ;main.c: 82: RA0 =0;
   344  006A  0020               	movlb	0	; select bank0
   345  006B  100C               	bcf	12,0	;volatile
   346  006C                     l580:	
   347                           ;main.c: 84: while (1) {
   348                           
   349                           
   350                           ;main.c: 86: Count++;
   351  006C  3001               	movlw	1
   352  006D  07F6               	addwf	_Count,f
   353  006E  3000               	movlw	0
   354  006F  3DF7               	addwfc	_Count+1,f
   355  0070                     l54:	
   356                           ;main.c: 88: while (RA2);
   357                           
   358  0070  190C               	btfsc	12,2	;volatile
   359  0071  2870               	goto	l54
   360  0072                     l57:	
   361                           ;main.c: 90: while (!RA2);
   362                           
   363  0072  1D0C               	btfss	12,2	;volatile
   364  0073  2872               	goto	l57
   365                           
   366                           ;main.c: 92: if (RA2 == 1) {
   367  0074  1D0C               	btfss	12,2	;volatile
   368  0075  2883               	goto	l60
   369                           
   370                           ;main.c: 93: RA5 = 1;
   371  0076  168C               	bsf	12,5	;volatile
   372                           
   373                           ;main.c: 94: cnt++;
   374  0077  3001               	movlw	1
   375  0078  07F4               	addwf	main@cnt,f
   376  0079  3000               	movlw	0
   377  007A  3DF5               	addwfc	main@cnt+1,f
   378                           
   379                           ;main.c: 95: _delay((unsigned long)((600)*(8000000/4000000.0)));
   380  007B  30EF               	movlw	239
   381  007C  00F2               	movwf	??_main
   382  007D                     u147:	
   383  007D  3200               	nop2
   384  007E  0BF2               	decfsz	??_main,f
   385  007F  287D               	goto	u147
   386  0080  3200               	nop2	;nop
   387  0081  3200               	nop2	;nop
   388                           
   389                           ;main.c: 96: } else {
   390  0082  2884               	goto	l61
   391  0083                     l60:	
   392                           
   393                           ;main.c: 97: RA5 = 0;
   394  0083  128C               	bcf	12,5	;volatile
   395  0084                     l61:	
   396                           
   397                           ;main.c: 98: }
   398                           ;main.c: 100: if (RA2 == 0) {
   399  0084  0020               	movlb	0	; select bank0
   400  0085  190C               	btfsc	12,2	;volatile
   401  0086  2895               	goto	l62
   402                           
   403                           ;main.c: 101: _delay((unsigned long)((600)*(8000000/4000000.0)));
   404  0087  30EF               	movlw	239
   405  0088  00F2               	movwf	??_main
   406  0089                     u157:	
   407  0089  3200               	nop2
   408  008A  0BF2               	decfsz	??_main,f
   409  008B  2889               	goto	u157
   410  008C  3200               	nop2	;nop
   411  008D  3200               	nop2	;nop
   412                           
   413                           ;main.c: 102: RA5 = 1;
   414  008E  0020               	movlb	0	; select bank0
   415  008F  168C               	bsf	12,5	;volatile
   416                           
   417                           ;main.c: 103: cnt++;
   418  0090  3001               	movlw	1
   419  0091  07F4               	addwf	main@cnt,f
   420  0092  3000               	movlw	0
   421  0093  3DF5               	addwfc	main@cnt+1,f
   422                           
   423                           ;main.c: 104: } else {
   424  0094  2896               	goto	l590
   425  0095                     l62:	
   426                           
   427                           ;main.c: 105: RA5 = 0;
   428  0095  128C               	bcf	12,5	;volatile
   429  0096                     l590:	
   430                           
   431                           ;main.c: 106: }
   432                           ;main.c: 108: if(Count >= 10){
   433  0096  0877               	movf	_Count+1,w
   434  0097  3A80               	xorlw	128
   435  0098  00F2               	movwf	??_main
   436  0099  3080               	movlw	128
   437  009A  0272               	subwf	??_main,w
   438  009B  1D03               	skipz
   439  009C  289F               	goto	u55
   440  009D  300A               	movlw	10
   441  009E  0276               	subwf	_Count,w
   442  009F                     u55:	
   443  009F  1C03               	skipc
   444  00A0  28AE               	goto	l64
   445                           
   446                           ;main.c: 109: if(cnt >= 8){
   447  00A1  0875               	movf	main@cnt+1,w
   448  00A2  3A80               	xorlw	128
   449  00A3  00F2               	movwf	??_main
   450  00A4  3080               	movlw	128
   451  00A5  0272               	subwf	??_main,w
   452  00A6  3008               	movlw	8
   453  00A7  1903               	btfsc	3,2
   454  00A8  0274               	subwf	main@cnt,w
   455  00A9  1C03               	skipc
   456  00AA  28B2               	goto	l600
   457                           
   458                           ;main.c: 110: RA0 = 1;
   459  00AB  0020               	movlb	0	; select bank0
   460  00AC  140C               	bsf	12,0	;volatile
   461  00AD  28B0               	goto	l598
   462  00AE                     l64:	
   463                           ;main.c: 112: }
   464                           ;main.c: 113: }else{
   465                           
   466                           ;main.c: 111: cnt = 0;
   467                           
   468                           
   469                           ;main.c: 114: RA0 = 0;
   470  00AE  0020               	movlb	0	; select bank0
   471  00AF  100C               	bcf	12,0	;volatile
   472  00B0                     l598:	
   473                           
   474                           ;main.c: 115: cnt = 0;
   475  00B0  01F4               	clrf	main@cnt
   476  00B1  01F5               	clrf	main@cnt+1
   477  00B2                     l600:	
   478                           
   479                           ;main.c: 116: }
   480                           ;main.c: 119: if (LEDflg == 0) RA1 = 0;
   481  00B2  0879               	movf	_LEDflg+1,w
   482  00B3  0478               	iorwf	_LEDflg,w
   483  00B4  1D03               	skipz
   484  00B5  28B9               	goto	l67
   485  00B6  0020               	movlb	0	; select bank0
   486  00B7  108C               	bcf	12,1	;volatile
   487  00B8  286C               	goto	l580
   488  00B9                     l67:	
   489                           
   490                           ;main.c: 120: else RA1 = 1;
   491  00B9  0020               	movlb	0	; select bank0
   492  00BA  148C               	bsf	12,1	;volatile
   493  00BB  286C               	goto	l580
   494  00BC                     __end_of_main:	
   495                           ;main.c: 121: }
   496                           ;main.c: 122: return (0);
   497                           ;	Return value of _main is never used
   498                           
   499                           
   500                           	psect	intentry
   501  0004                     __pintentry:	
   502 ;; *************** function _InterTimer *****************
   503 ;; Defined at:
   504 ;;		line 133 in file "main.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;		None               void
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1
   518 ;;      Params:         0       0       0
   519 ;;      Locals:         0       0       0
   520 ;;      Temps:          2       0       0
   521 ;;      Totals:         2       0       0
   522 ;;Total ram usage:        2 bytes
   523 ;; Hardware stack levels used:    1
   524 ;; This function calls:
   525 ;;		Nothing
   526 ;; This function is called by:
   527 ;;		Interrupt level 1
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531  0004                     _InterTimer:	
   532                           
   533                           ;incstack = 0
   534                           ; Regs used in _InterTimer: [wreg+status,2+status,0]
   535  0004  147E               	bsf	126,0	;set compiler interrupt flag
   536  0005  3180               	pagesel	$
   537  0006  0020               	movlb	0	; select bank0
   538  0007  087F               	movf	127,w
   539  0008  00F1               	movwf	??_InterTimer+1
   540                           
   541                           ;main.c: 134: if (TMR0IF == 1) {
   542  0009  1D0B               	btfss	11,2	;volatile
   543  000A  282A               	goto	i1l87
   544                           
   545                           ;main.c: 135: TMR0 = 61;
   546  000B  303D               	movlw	61
   547  000C  0095               	movwf	21	;volatile
   548                           
   549                           ;main.c: 136: Count++;
   550  000D  3001               	movlw	1
   551  000E  07F6               	addwf	_Count,f
   552  000F  3000               	movlw	0
   553  0010  3DF7               	addwfc	_Count+1,f
   554                           
   555                           ;main.c: 137: TMR0IF = 0;
   556  0011  110B               	bcf	11,2	;volatile
   557                           
   558                           ;main.c: 138: if (Count >= 40) {
   559  0012  0877               	movf	_Count+1,w
   560  0013  3A80               	xorlw	128
   561  0014  00F0               	movwf	??_InterTimer
   562  0015  3080               	movlw	128
   563  0016  0270               	subwf	??_InterTimer,w
   564  0017  1D03               	skipz
   565  0018  281B               	goto	u11_25
   566  0019  3028               	movlw	40
   567  001A  0276               	subwf	_Count,w
   568  001B                     u11_25:	
   569  001B  1C03               	skipc
   570  001C  282A               	goto	i1l87
   571                           
   572                           ;main.c: 139: Count = 0;
   573  001D  01F6               	clrf	_Count
   574  001E  01F7               	clrf	_Count+1
   575                           
   576                           ;main.c: 141: if (LEDflg == 0) LEDflg = 1;
   577  001F  0879               	movf	_LEDflg+1,w
   578  0020  0478               	iorwf	_LEDflg,w
   579  0021  1D03               	skipz
   580  0022  2828               	goto	i1l624
   581  0023  3001               	movlw	1
   582  0024  00F8               	movwf	_LEDflg
   583  0025  3000               	movlw	0
   584  0026  00F9               	movwf	_LEDflg+1
   585  0027  282A               	goto	i1l87
   586  0028                     i1l624:	
   587                           
   588                           ;main.c: 142: else LEDflg = 0;
   589  0028  01F8               	clrf	_LEDflg
   590  0029  01F9               	clrf	_LEDflg+1
   591  002A                     i1l87:	
   592  002A  0871               	movf	??_InterTimer+1,w
   593  002B  0020               	movlb	0	; select bank0
   594  002C  00FF               	movwf	127
   595  002D  107E               	bcf	126,0	;clear compiler interrupt flag
   596  002E  0009               	retfie
   597  002F                     __end_of_InterTimer:	
   598  007E                     btemp	set	126	;btemp
   599  007E                     pic14e$flags	set	126
   600  007E                     wtemp	set	126
   601  007E                     wtemp0	set	126
   602  0080                     wtemp1	set	128
   603  0082                     wtemp2	set	130
   604  0084                     wtemp3	set	132
   605  0086                     wtemp4	set	134
   606  0088                     wtemp5	set	136
   607  007F                     wtemp6	set	127
   608  007E                     ttemp	set	126
   609  007E                     ttemp0	set	126
   610  0081                     ttemp1	set	129
   611  0084                     ttemp2	set	132
   612  0087                     ttemp3	set	135
   613  007F                     ttemp4	set	127
   614  007E                     ltemp	set	126
   615  007E                     ltemp0	set	126
   616  0082                     ltemp1	set	130
   617  0086                     ltemp2	set	134
   618  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    8
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      0       8
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterTimer in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      15
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _InterTimer                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _InterTimer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      12       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       8       6       10.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      12       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Feb 25 16:01:45 2015

            __CFG_CP$OFF 0000                       l60 0083                       l61 0084  
                     l62 0095                       l54 0070                       l64 00AE  
                     l57 0072                       l67 00B9                       u55 009F  
                    l600 00B2                      l580 006C                      l590 0096  
                    l598 00B0                      _GIE 005F                      _RA0 0060  
                    _RA1 0061                      _RA2 0062                      _RA5 0065  
                    u137 0065                      u147 007D                      u157 0089  
           __CFG_CPD$OFF 0000                      _sig 0100             __CFG_BORV$HI 0000  
           __CFG_LVP$OFF 0000                     i1l87 002A                     _TMR0 0015  
           __CFG_WRT$OFF 0000                     _data 0020                     _main 003F  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 002F                     ttemp 007E                     wtemp 007E  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    i1l624 0028                    u11_25 001B  
                  _RCSTA 019D                    _SPBRG 019B                    _PORTA 000C  
                  _TRISA 008C                    _TXREG 019A                    _TXSTA 019E  
          __CFG_PWRTE$ON 0000                    _Count 0076           __CFG_FCMEN$OFF 0000  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 0030             __end_of_main 00BC  
                 ??_main 0072               _InterTimer 0004           __CFG_PLLEN$OFF 0000  
                 _LEDflg 0078                   _OSCCON 0099                   _TMR0IE 005D  
                 _TMR0IF 005A           __CFG_STVREN$ON 0000  __end_of__initialization 003C  
         __pcstackCOMMON 0070              ?_InterTimer 0070               __pbssBANK0 0020  
             __pmaintext 003F               __pintentry 0004                  _RXDTSEL 08EF  
                _TXCKSEL 08EA      __size_of_InterTimer 002B                  main@cnt 0074  
   end_of_initialization 003C             __pstringtext 0100         __CFG_FOSC$INTOSC 0000  
           ??_InterTimer 0070      start_initialization 0030              __end_of_sig 0108  
     __end_of_InterTimer 002F              __pbssCOMMON 0076                ___latbits 0000  
               _PIR1bits 0011               _ANSELAbits 018C            __size_of_main 007D  
            pic14e$flags 007E                 intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
             _OPTION_REG 0095  
