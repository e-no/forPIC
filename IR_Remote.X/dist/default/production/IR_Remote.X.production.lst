

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Feb 10 15:21:11 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  0011                     	;# 
    31  0012                     	;# 
    32  0015                     	;# 
    33  0016                     	;# 
    34  0016                     	;# 
    35  0017                     	;# 
    36  0018                     	;# 
    37  0019                     	;# 
    38  001A                     	;# 
    39  001B                     	;# 
    40  001C                     	;# 
    41  001E                     	;# 
    42  001F                     	;# 
    43  008C                     	;# 
    44  0091                     	;# 
    45  0092                     	;# 
    46  0095                     	;# 
    47  0096                     	;# 
    48  0097                     	;# 
    49  0098                     	;# 
    50  0099                     	;# 
    51  009A                     	;# 
    52  009B                     	;# 
    53  009B                     	;# 
    54  009C                     	;# 
    55  009D                     	;# 
    56  009E                     	;# 
    57  010C                     	;# 
    58  0111                     	;# 
    59  0112                     	;# 
    60  0115                     	;# 
    61  0116                     	;# 
    62  0117                     	;# 
    63  0118                     	;# 
    64  0119                     	;# 
    65  011A                     	;# 
    66  011B                     	;# 
    67  011D                     	;# 
    68  011D                     	;# 
    69  018C                     	;# 
    70  0191                     	;# 
    71  0191                     	;# 
    72  0192                     	;# 
    73  0193                     	;# 
    74  0193                     	;# 
    75  0193                     	;# 
    76  0194                     	;# 
    77  0195                     	;# 
    78  0196                     	;# 
    79  0199                     	;# 
    80  019A                     	;# 
    81  019B                     	;# 
    82  019B                     	;# 
    83  019B                     	;# 
    84  019B                     	;# 
    85  019C                     	;# 
    86  019C                     	;# 
    87  019D                     	;# 
    88  019E                     	;# 
    89  019F                     	;# 
    90  020C                     	;# 
    91  0211                     	;# 
    92  0211                     	;# 
    93  0212                     	;# 
    94  0212                     	;# 
    95  0213                     	;# 
    96  0213                     	;# 
    97  0214                     	;# 
    98  0214                     	;# 
    99  0215                     	;# 
   100  0215                     	;# 
   101  0215                     	;# 
   102  0216                     	;# 
   103  0216                     	;# 
   104  0217                     	;# 
   105  0217                     	;# 
   106  0291                     	;# 
   107  0291                     	;# 
   108  0292                     	;# 
   109  0293                     	;# 
   110  0294                     	;# 
   111  0295                     	;# 
   112  0295                     	;# 
   113  0296                     	;# 
   114  0391                     	;# 
   115  0392                     	;# 
   116  0393                     	;# 
   117  039A                     	;# 
   118  039C                     	;# 
   119  039D                     	;# 
   120  039E                     	;# 
   121  039F                     	;# 
   122  0FE4                     	;# 
   123  0FE5                     	;# 
   124  0FE6                     	;# 
   125  0FE7                     	;# 
   126  0FE8                     	;# 
   127  0FE9                     	;# 
   128  0FEA                     	;# 
   129  0FEB                     	;# 
   130  0FED                     	;# 
   131  0FEE                     	;# 
   132  0FEF                     	;# 
   133                           
   134                           	psect	stringtext
   135  0200                     __pstringtext:	
   136  0200                     _DaTM1_H:	
   137  0200  3473               	retlw	115
   138  0201  3400               	retlw	0
   139  0202  34CB               	retlw	203
   140  0203  3400               	retlw	0
   141  0204  34D8               	retlw	216
   142  0205  3400               	retlw	0
   143  0206  34EE               	retlw	238
   144  0207  3400               	retlw	0
   145  0208  34DC               	retlw	220
   146  0209  3400               	retlw	0
   147  020A                     __end_of_DaTM1_H:	
   148  020A                     _DaTM1_L:	
   149  020A  3460               	retlw	96
   150  020B  3400               	retlw	0
   151  020C  3444               	retlw	68
   152  020D  3400               	retlw	0
   153  020E  3473               	retlw	115
   154  020F  3400               	retlw	0
   155  0210  346C               	retlw	108
   156  0211  3400               	retlw	0
   157  0212  34D8               	retlw	216
   158  0213  3400               	retlw	0
   159  0214                     __end_of_DaTM1_L:	
   160  000C                     _PORTA	set	12
   161  0018                     _T1CON	set	24
   162  0017                     _TMR1H	set	23
   163  0016                     _TMR1L	set	22
   164  005F                     _GIE	set	95
   165  005E                     _PEIE	set	94
   166  0060                     _RA0	set	96
   167  0061                     _RA1	set	97
   168  0063                     _RA3	set	99
   169  0064                     _RA4	set	100
   170  0065                     _RA5	set	101
   171  0088                     _TMR1IF	set	136
   172  00C0                     _TMR1ON	set	192
   173  0099                     _OSCCON	set	153
   174  008C                     _TRISA	set	140
   175  0488                     _TMR1IE	set	1160
   176  04AF                     _nWPUEN	set	1199
   177  011D                     _APFCON	set	285
   178  010C                     _LATA	set	268
   179  018C                     _ANSELA	set	396
   180  020C                     _WPUA	set	524
   181                           
   182                           ; #config settings
   183  0000                     
   184                           	psect	cinit
   185  0039                     start_initialization:	
   186  0039                     __initialization:	
   187                           
   188                           ; Clear objects allocated to COMMON
   189  0039  01F8               	clrf	__pbssCOMMON& (0+127)
   190  003A  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   191  003B  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   192                           
   193                           ; Clear objects allocated to BANK0
   194  003C  01A0               	clrf	__pbssBANK0& (0+127)
   195  003D  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   196  003E  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   197  003F  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   198  0040                     end_of_initialization:	
   199                           ;End of C runtime variable initialization code
   200                           
   201  0040                     __end_of__initialization:	
   202  0040  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   203  0041  0020               	movlb	0
   204  0042  2843               	ljmp	_main	;jump to C main() function
   205                           
   206                           	psect	bssCOMMON
   207  0078                     __pbssCOMMON:	
   208  0078                     _IR_Dat1:	
   209  0078                     	ds	1
   210  0079                     _IR_Dat2:	
   211  0079                     	ds	1
   212  007A                     _TMR1_EF:	
   213  007A                     	ds	1
   214                           
   215                           	psect	bssBANK0
   216  0020                     __pbssBANK0:	
   217  0020                     _IR_DatX:	
   218  0020                     	ds	1
   219  0021                     _RepeatF:	
   220  0021                     	ds	1
   221  0022                     _StartF:	
   222  0022                     	ds	1
   223  0023                     _TMR1_DC:	
   224  0023                     	ds	1
   225                           
   226                           	psect	cstackCOMMON
   227  0070                     __pcstackCOMMON:	
   228  0070                     ?_ActionLED:	
   229  0070                     ?_LED_Flash:	
   230                           ; 0 bytes @ 0x0
   231                           
   232  0070                     ?_isr:	
   233                           ; 0 bytes @ 0x0
   234                           
   235  0070                     ??_isr:	
   236                           ; 0 bytes @ 0x0
   237                           
   238  0070                     ?_IR_DatST:	
   239                           ; 0 bytes @ 0x0
   240                           
   241  0070                     ?_Delay_10ms:	
   242                           ; 0 bytes @ 0x0
   243                           
   244  0070                     ?_main:	
   245                           ; 0 bytes @ 0x0
   246                           
   247                           
   248                           ; 0 bytes @ 0x0
   249  0070                     	ds	3
   250  0073                     ??_IR_DatST:	
   251  0073                     ??_Delay_10ms:	
   252                           ; 0 bytes @ 0x3
   253                           
   254                           
   255                           ; 0 bytes @ 0x3
   256  0073                     	ds	1
   257  0074                     IR_DatST@j:	
   258                           
   259                           ; 2 bytes @ 0x4
   260  0074                     	ds	1
   261  0075                     Delay_10ms@time:	
   262                           
   263                           ; 1 bytes @ 0x5
   264  0075                     	ds	1
   265  0076                     ??_LED_Flash:	
   266  0076                     IR_DatST@BitPos:	
   267                           ; 0 bytes @ 0x6
   268                           
   269                           
   270                           ; 1 bytes @ 0x6
   271  0076                     	ds	1
   272  0077                     ??_ActionLED:	
   273  0077                     main@i:	
   274                           ; 0 bytes @ 0x7
   275                           
   276                           
   277                           ; 1 bytes @ 0x7
   278  0077                     	ds	1
   279                           
   280                           	psect	cstackBANK0
   281  0024                     __pcstackBANK0:	
   282  0024                     LED_Flash@F_Cnt:	
   283                           
   284                           ; 1 bytes @ 0x0
   285  0024                     	ds	1
   286  0025                     LED_Flash@k:	
   287                           
   288                           ; 1 bytes @ 0x1
   289  0025                     	ds	1
   290  0026                     ??_main:	
   291                           
   292                           ; 0 bytes @ 0x2
   293  0026                     	ds	2
   294                           
   295                           	psect	maintext
   296  0043                     __pmaintext:	
   297 ;;
   298 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   299 ;;
   300 ;; *************** function _main *****************
   301 ;; Defined at:
   302 ;;		line 142 in file "main.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;  i               1    7[COMMON] unsigned char 
   307 ;; Return value:  Size  Location     Type
   308 ;;		None               void
   309 ;; Registers used:
   310 ;;		wreg, status,2, status,0, pclath, cstack
   311 ;; Tracked objects:
   312 ;;		On entry : 17F/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMMON   BANK0   BANK1
   316 ;;      Params:         0       0       0
   317 ;;      Locals:         1       0       0
   318 ;;      Temps:          0       2       0
   319 ;;      Totals:         1       2       0
   320 ;;Total ram usage:        3 bytes
   321 ;; Hardware stack levels required when called:    4
   322 ;; This function calls:
   323 ;;		_ActionLED
   324 ;;		_Delay_10ms
   325 ;;		_IR_DatST
   326 ;; This function is called by:
   327 ;;		Startup code after reset
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           
   332                           ;psect for function _main
   333  0043                     _main:	
   334                           
   335                           ;main.c: 144: OSCCON = 0b01111010;
   336                           
   337                           ;incstack = 0
   338                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   339  0043  307A               	movlw	122
   340  0044  0021               	movlb	1	; select bank1
   341  0045  0099               	movwf	25	;volatile
   342                           
   343                           ;main.c: 145: GIE = 0;
   344  0046  138B               	bcf	11,7	;volatile
   345                           
   346                           ;main.c: 146: ANSELA = 0;
   347  0047  0023               	movlb	3	; select bank3
   348  0048  018C               	clrf	12	;volatile
   349                           
   350                           ;main.c: 147: APFCON = 0b00000001;
   351  0049  3001               	movlw	1
   352  004A  0022               	movlb	2	; select bank2
   353  004B  009D               	movwf	29	;volatile
   354                           
   355                           ;main.c: 150: nWPUEN = 0;
   356  004C  0021               	movlb	1	; select bank1
   357  004D  1395               	bcf	21,7	;volatile
   358                           
   359                           ;main.c: 151: TRISA = 0b11101100;
   360  004E  30EC               	movlw	236
   361  004F  008C               	movwf	12	;volatile
   362                           
   363                           ;main.c: 152: WPUA = 0b11101100;
   364  0050  30EC               	movlw	236
   365  0051  0024               	movlb	4	; select bank4
   366  0052  008C               	movwf	12	;volatile
   367                           
   368                           ;main.c: 153: PORTA = 0b11101100;
   369  0053  30EC               	movlw	236
   370  0054  0020               	movlb	0	; select bank0
   371  0055  008C               	movwf	12	;volatile
   372                           
   373                           ;main.c: 154: LATA = 0b11101100;
   374  0056  30EC               	movlw	236
   375  0057  0022               	movlb	2	; select bank2
   376  0058  008C               	movwf	12	;volatile
   377                           
   378                           ;main.c: 156: T1CON = 0b00000000;
   379  0059  0020               	movlb	0	; select bank0
   380  005A  0198               	clrf	24	;volatile
   381                           
   382                           ;main.c: 161: TMR1H = 0xEE;
   383  005B  30EE               	movlw	238
   384  005C  0097               	movwf	23	;volatile
   385                           
   386                           ;main.c: 162: TMR1L = 0x6C;
   387  005D  306C               	movlw	108
   388  005E  0096               	movwf	22	;volatile
   389                           
   390                           ;main.c: 163: TMR1IF = 0;
   391  005F  1011               	bcf	17,0	;volatile
   392                           
   393                           ;main.c: 166: TMR1IE = 1;
   394  0060  0021               	movlb	1	; select bank1
   395  0061  1411               	bsf	17,0	;volatile
   396                           
   397                           ;main.c: 167: PEIE = 1;
   398  0062  170B               	bsf	11,6	;volatile
   399                           
   400                           ;main.c: 168: GIE = 1;
   401  0063  178B               	bsf	11,7	;volatile
   402                           
   403                           ;main.c: 170: TMR1_DC = 0;
   404  0064  0020               	movlb	0	; select bank0
   405  0065  01A3               	clrf	_TMR1_DC
   406                           
   407                           ;main.c: 171: TMR1_EF = 0;
   408  0066  01FA               	clrf	_TMR1_EF
   409                           
   410                           ;main.c: 173: RA1 = 1;
   411  0067  148C               	bsf	12,1	;volatile
   412                           
   413                           ;main.c: 174: Delay_10ms(20);
   414  0068  3014               	movlw	20
   415  0069  2214               	fcall	_Delay_10ms
   416                           
   417                           ;main.c: 175: RA1 = 0;
   418  006A  0020               	movlb	0	; select bank0
   419  006B  108C               	bcf	12,1	;volatile
   420                           
   421                           ;main.c: 176: Delay_10ms(20);
   422  006C  3014               	movlw	20
   423  006D  2214               	fcall	_Delay_10ms
   424                           
   425                           ;main.c: 177: RA0 = 1;
   426  006E  0020               	movlb	0	; select bank0
   427  006F  140C               	bsf	12,0	;volatile
   428                           
   429                           ;main.c: 178: Delay_10ms(20);
   430  0070  3014               	movlw	20
   431  0071  2214               	fcall	_Delay_10ms
   432                           
   433                           ;main.c: 179: RA0 = 0;
   434  0072  0020               	movlb	0	; select bank0
   435  0073  100C               	bcf	12,0	;volatile
   436  0074                     l1223:	
   437                           ;main.c: 184: while (RA5 == 1) {
   438                           
   439                           ;main.c: 183: while (1) {
   440                           
   441  0074  0020               	movlb	0	; select bank0
   442  0075  1E8C               	btfss	12,5	;volatile
   443  0076  28F6               	goto	l94
   444                           
   445                           ;main.c: 185: _delay((unsigned long)((1)*(16000000/4000.0)));
   446  0077  3006               	movlw	6
   447  0078  00A7               	movwf	??_main+1
   448  0079  3030               	movlw	48
   449  007A  00A6               	movwf	??_main
   450  007B                     u1367:	
   451  007B  0BA6               	decfsz	??_main,f
   452  007C  287B               	goto	u1367
   453  007D  0BA7               	decfsz	??_main+1,f
   454  007E  287B               	goto	u1367
   455  007F  0000               	nop
   456  0080  2874               	goto	l1223
   457  0081                     l1225:	
   458                           
   459                           ;main.c: 192: _delay((unsigned long)((4)*(16000000/4000.0)));
   460  0081  3015               	movlw	21
   461  0082  00A7               	movwf	??_main+1
   462  0083  30C6               	movlw	198
   463  0084  00A6               	movwf	??_main
   464  0085                     u1377:	
   465  0085  0BA6               	decfsz	??_main,f
   466  0086  2885               	goto	u1377
   467  0087  0BA7               	decfsz	??_main+1,f
   468  0088  2885               	goto	u1377
   469  0089  0000               	nop
   470                           
   471                           ;main.c: 193: if (RA5 == 0)
   472  008A  0020               	movlb	0	; select bank0
   473  008B  1A8C               	btfsc	12,5	;volatile
   474  008C  28FA               	goto	l1271
   475                           
   476                           ;main.c: 194: _delay((unsigned long)((4)*(16000000/4000.0)));
   477  008D  3015               	movlw	21
   478  008E  00A7               	movwf	??_main+1
   479  008F  30C6               	movlw	198
   480  0090  00A6               	movwf	??_main
   481  0091                     u1387:	
   482  0091  0BA6               	decfsz	??_main,f
   483  0092  2891               	goto	u1387
   484  0093  0BA7               	decfsz	??_main+1,f
   485  0094  2891               	goto	u1387
   486  0095  0000               	nop
   487  0096                     l100:	
   488  0096  0020               	movlb	0	; select bank0
   489  0097  1A8C               	btfsc	12,5	;volatile
   490  0098  289B               	goto	l102
   491                           
   492                           ;main.c: 202: RA3 = 0;
   493                           
   494                           ;main.c: 201: while (RA5 == 0) {
   495                           
   496                           ;main.c: 198: break;
   497                           
   498                           ;main.c: 197: } else
   499                           
   500                           ;main.c: 195: else
   501                           ;main.c: 196: break;
   502  0099  118C               	bcf	12,3	;volatile
   503  009A  2896               	goto	l100
   504  009B                     l102:	
   505                           
   506                           ;main.c: 203: }
   507                           ;main.c: 204: if (RA5 == 1) {
   508  009B  1E8C               	btfss	12,5	;volatile
   509  009C  28FA               	goto	l1271
   510                           
   511                           ;main.c: 205: _delay((unsigned long)((3500)*(16000000/4000000.0)));
   512  009D  3013               	movlw	19
   513  009E  00A7               	movwf	??_main+1
   514  009F  302D               	movlw	45
   515  00A0  00A6               	movwf	??_main
   516  00A1                     u1397:	
   517  00A1  0BA6               	decfsz	??_main,f
   518  00A2  28A1               	goto	u1397
   519  00A3  0BA7               	decfsz	??_main+1,f
   520  00A4  28A1               	goto	u1397
   521                           
   522                           ;main.c: 206: if (RA5 == 1)
   523  00A5  0020               	movlb	0	; select bank0
   524  00A6  1E8C               	btfss	12,5	;volatile
   525  00A7  28AB               	goto	l1237
   526                           
   527                           ;main.c: 207: RepeatF = 1;
   528  00A8  01A1               	clrf	_RepeatF
   529  00A9  0AA1               	incf	_RepeatF,f
   530  00AA  28AC               	goto	l107
   531  00AB                     l1237:	
   532                           
   533                           ;main.c: 208: else
   534                           ;main.c: 209: RepeatF = 0;
   535  00AB  01A1               	clrf	_RepeatF
   536  00AC                     l107:	
   537                           ;main.c: 210: } else
   538                           
   539  00AC  1E8C               	btfss	12,5	;volatile
   540  00AD  28B0               	goto	l1239
   541                           
   542                           ;main.c: 215: RA3 = 1;
   543                           
   544                           ;main.c: 214: while (RA5 == 1) {
   545                           
   546                           ;main.c: 211: break;
   547  00AE  158C               	bsf	12,3	;volatile
   548  00AF  28AC               	goto	l107
   549  00B0                     l1239:	
   550                           
   551                           ;main.c: 216: }
   552                           ;main.c: 217: _delay((unsigned long)((1400)*(16000000/4000000.0)));
   553  00B0  3008               	movlw	8
   554  00B1  00A7               	movwf	??_main+1
   555  00B2  3044               	movlw	68
   556  00B3  00A6               	movwf	??_main
   557  00B4                     u1407:	
   558  00B4  0BA6               	decfsz	??_main,f
   559  00B5  28B4               	goto	u1407
   560  00B6  0BA7               	decfsz	??_main+1,f
   561  00B7  28B4               	goto	u1407
   562  00B8  0000               	nop
   563                           
   564                           ;main.c: 218: RA4 = 1;
   565  00B9  0020               	movlb	0	; select bank0
   566  00BA  160C               	bsf	12,4	;volatile
   567                           
   568                           ;main.c: 220: if ((RA5 == 0) && (RepeatF == 1)) {
   569  00BB  1A8C               	btfsc	12,5	;volatile
   570  00BC  28FA               	goto	l1271
   571  00BD  0821               	movf	_RepeatF,w
   572  00BE  3A01               	xorlw	1
   573  00BF  1D03               	skipz
   574  00C0  28FA               	goto	l1271
   575                           
   576                           ;main.c: 222: unsigned char i;
   577                           ;main.c: 223: i = 0;
   578  00C1  01F7               	clrf	main@i
   579                           
   580                           ;main.c: 224: for (i = 0; i < 15; i++) {
   581  00C2  01F7               	clrf	main@i
   582  00C3  28E2               	goto	L2
   583  00C4                     l113:	
   584  00C4  1A8C               	btfsc	12,5	;volatile
   585  00C5  28C8               	goto	l1253
   586                           
   587                           ;main.c: 227: RA3 = 0;
   588                           
   589                           ;main.c: 226: while (RA5 == 0) {
   590  00C6  118C               	bcf	12,3	;volatile
   591  00C7  28C4               	goto	l113
   592  00C8                     l1253:	
   593                           
   594                           ;main.c: 228: }
   595                           ;main.c: 229: _delay((unsigned long)((300)*(16000000/4000000.0)));
   596  00C8  30EF               	movlw	239
   597  00C9  00A6               	movwf	??_main
   598  00CA                     u1417:	
   599  00CA  3200               	nop2
   600  00CB  0BA6               	decfsz	??_main,f
   601  00CC  28CA               	goto	u1417
   602  00CD  3200               	nop2	;nop
   603  00CE  3200               	nop2	;nop
   604  00CF                     l116:	
   605                           ;main.c: 230: while (RA5 == 1) {
   606                           
   607  00CF  0020               	movlb	0	; select bank0
   608  00D0  1E8C               	btfss	12,5	;volatile
   609  00D1  28D4               	goto	l1255
   610                           
   611                           ;main.c: 231: RA3 = 1;
   612  00D2  158C               	bsf	12,3	;volatile
   613  00D3  28CF               	goto	l116
   614  00D4                     l1255:	
   615                           
   616                           ;main.c: 232: }
   617                           ;main.c: 233: _delay((unsigned long)((300)*(16000000/4000000.0)));
   618  00D4  30EF               	movlw	239
   619  00D5  00A6               	movwf	??_main
   620  00D6                     u1427:	
   621  00D6  3200               	nop2
   622  00D7  0BA6               	decfsz	??_main,f
   623  00D8  28D6               	goto	u1427
   624  00D9  3200               	nop2	;nop
   625  00DA  3200               	nop2	;nop
   626                           
   627                           ;main.c: 234: RA4 = !RA4;
   628  00DB  3010               	movlw	16
   629  00DC  0020               	movlb	0	; select bank0
   630  00DD  068C               	xorwf	12,f
   631  00DE  3001               	movlw	1
   632  00DF  00A6               	movwf	??_main
   633  00E0  0826               	movf	??_main,w
   634  00E1  07F7               	addwf	main@i,f
   635  00E2                     L2:	
   636  00E2  300F               	movlw	15
   637  00E3  0277               	subwf	main@i,w
   638  00E4  1C03               	skipc
   639  00E5  28C4               	goto	l113
   640                           
   641                           ;main.c: 235: }
   642                           ;main.c: 236: RA4 = 0;
   643  00E6  120C               	bcf	12,4	;volatile
   644                           
   645                           ;main.c: 243: TMR1ON = 1;
   646                           
   647                           ;main.c: 238: break;
   648                           
   649                           ;main.c: 237: } else
   650  00E7  1418               	bsf	24,0	;volatile
   651                           
   652                           ;main.c: 246: IR_DatST();
   653  00E8  217E               	fcall	_IR_DatST
   654                           
   655                           ;main.c: 247: IR_Dat1 = IR_DatX;
   656  00E9  0020               	movlb	0	; select bank0
   657  00EA  0820               	movf	_IR_DatX,w
   658  00EB  00A6               	movwf	??_main
   659  00EC  0826               	movf	??_main,w
   660  00ED  00F8               	movwf	_IR_Dat1
   661                           
   662                           ;main.c: 249: IR_DatST();
   663  00EE  217E               	fcall	_IR_DatST
   664                           
   665                           ;main.c: 250: IR_Dat2 = IR_DatX;
   666  00EF  0020               	movlb	0	; select bank0
   667  00F0  0820               	movf	_IR_DatX,w
   668  00F1  00A6               	movwf	??_main
   669  00F2  0826               	movf	??_main,w
   670  00F3  00F9               	movwf	_IR_Dat2
   671                           
   672                           ;main.c: 252: TMR1ON = 0;
   673  00F4  1018               	bcf	24,0	;volatile
   674                           
   675                           ;main.c: 253: ActionLED();
   676  00F5  2103               	fcall	_ActionLED
   677  00F6                     l94:	
   678                           ;main.c: 187: }
   679                           ;main.c: 189: while (1) {
   680                           
   681                           
   682                           ;main.c: 190: RA3 = 1;
   683  00F6  0020               	movlb	0	; select bank0
   684  00F7  158C               	bsf	12,3	;volatile
   685                           
   686                           ;main.c: 191: if (RA5 == 0) {
   687  00F8  1E8C               	btfss	12,5	;volatile
   688  00F9  2881               	goto	l1225
   689  00FA                     l1271:	
   690                           
   691                           ;main.c: 254: }
   692                           ;main.c: 255: TMR1_DC = 0;
   693  00FA  0020               	movlb	0	; select bank0
   694  00FB  01A3               	clrf	_TMR1_DC
   695                           
   696                           ;main.c: 256: TMR1H = 0xEE;
   697  00FC  30EE               	movlw	238
   698  00FD  0097               	movwf	23	;volatile
   699                           
   700                           ;main.c: 257: TMR1L = 0x6C;
   701  00FE  306C               	movlw	108
   702  00FF  0096               	movwf	22	;volatile
   703                           
   704                           ;main.c: 261: Delay_10ms(20);
   705  0100  3014               	movlw	20
   706  0101  2214               	fcall	_Delay_10ms
   707  0102  2874               	goto	l1223
   708  0103                     __end_of_main:	
   709                           
   710                           	psect	text1
   711  017E                     __ptext1:	
   712 ;; *************** function _IR_DatST *****************
   713 ;; Defined at:
   714 ;;		line 115 in file "main.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  j               2    4[COMMON] int 
   719 ;;  BitPos          1    6[COMMON] unsigned char 
   720 ;; Return value:  Size  Location     Type
   721 ;;		None               void
   722 ;; Registers used:
   723 ;;		wreg, status,2, status,0
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1
   729 ;;      Params:         0       0       0
   730 ;;      Locals:         3       0       0
   731 ;;      Temps:          1       0       0
   732 ;;      Totals:         4       0       0
   733 ;;Total ram usage:        4 bytes
   734 ;; Hardware stack levels used:    1
   735 ;; Hardware stack levels required when called:    1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_main
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           
   744                           ;psect for function _IR_DatST
   745  017E                     _IR_DatST:	
   746                           
   747                           ;main.c: 116: int j;
   748                           ;main.c: 117: unsigned char BitPos;
   749                           ;main.c: 118: IR_DatX = 0;
   750                           
   751                           ;incstack = 0
   752                           ; Regs used in _IR_DatST: [wreg+status,2+status,0]
   753  017E  0020               	movlb	0	; select bank0
   754  017F  01A0               	clrf	_IR_DatX
   755                           
   756                           ;main.c: 119: BitPos = 0x80;
   757  0180  3080               	movlw	128
   758  0181  00F3               	movwf	??_IR_DatST
   759  0182  0873               	movf	??_IR_DatST,w
   760  0183  00F6               	movwf	IR_DatST@BitPos
   761                           
   762                           ;main.c: 120: for (j = 0; j < 8; j++) {
   763  0184  01F4               	clrf	IR_DatST@j
   764  0185  01F5               	clrf	IR_DatST@j+1
   765  0186  0875               	movf	IR_DatST@j+1,w
   766  0187  3A80               	xorlw	128
   767  0188  00F3               	movwf	??_IR_DatST
   768  0189  3080               	movlw	128
   769  018A  0273               	subwf	??_IR_DatST,w
   770  018B  3008               	movlw	8
   771  018C  1903               	btfsc	3,2
   772  018D  0274               	subwf	IR_DatST@j,w
   773  018E  1803               	btfsc	3,0
   774  018F  29AF               	goto	l76
   775  0190                     l1091:	
   776                           ;main.c: 121: while (TMR1_EF == 0) {
   777                           
   778  0190  087A               	movf	_TMR1_EF,w
   779  0191  1903               	btfsc	3,2
   780  0192  2990               	goto	l1091
   781                           
   782                           ;main.c: 122: }
   783                           ;main.c: 123: TMR1_EF = 0;
   784  0193  01FA               	clrf	_TMR1_EF
   785                           
   786                           ;main.c: 124: if (RA5 == 1)
   787  0194  0020               	movlb	0	; select bank0
   788  0195  1E8C               	btfss	12,5	;volatile
   789  0196  299B               	goto	l80
   790                           
   791                           ;main.c: 125: IR_DatX |= BitPos;
   792  0197  0876               	movf	IR_DatST@BitPos,w
   793  0198  00F3               	movwf	??_IR_DatST
   794  0199  0873               	movf	??_IR_DatST,w
   795  019A  04A0               	iorwf	_IR_DatX,f
   796  019B                     l80:	
   797                           
   798                           ;main.c: 126: BitPos = BitPos >> 1;
   799  019B  3676               	lsrf	IR_DatST@BitPos,w
   800  019C  00F3               	movwf	??_IR_DatST
   801  019D  0873               	movf	??_IR_DatST,w
   802  019E  00F6               	movwf	IR_DatST@BitPos
   803                           
   804                           ;main.c: 127: RA4 = !RA4;
   805  019F  3010               	movlw	16
   806  01A0  068C               	xorwf	12,f
   807  01A1  3001               	movlw	1
   808  01A2  07F4               	addwf	IR_DatST@j,f
   809  01A3  3000               	movlw	0
   810  01A4  3DF5               	addwfc	IR_DatST@j+1,f
   811  01A5  0875               	movf	IR_DatST@j+1,w
   812  01A6  3A80               	xorlw	128
   813  01A7  00F3               	movwf	??_IR_DatST
   814  01A8  3080               	movlw	128
   815  01A9  0273               	subwf	??_IR_DatST,w
   816  01AA  3008               	movlw	8
   817  01AB  1903               	btfsc	3,2
   818  01AC  0274               	subwf	IR_DatST@j,w
   819  01AD  1C03               	skipc
   820  01AE  2990               	goto	l1091
   821  01AF                     l76:	
   822                           
   823                           ;main.c: 128: }
   824                           ;main.c: 129: RA4 = 0;
   825  01AF  0020               	movlb	0	; select bank0
   826  01B0  120C               	bcf	12,4	;volatile
   827  01B1  0008               	return
   828  01B2                     __end_of_IR_DatST:	
   829                           
   830                           	psect	text2
   831  0103                     __ptext2:	
   832 ;; *************** function _ActionLED *****************
   833 ;; Defined at:
   834 ;;		line 267 in file "main.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;		None               void
   841 ;; Registers used:
   842 ;;		wreg, status,2, status,0, pclath, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1
   848 ;;      Params:         0       0       0
   849 ;;      Locals:         0       0       0
   850 ;;      Temps:          0       0       0
   851 ;;      Totals:         0       0       0
   852 ;;Total ram usage:        0 bytes
   853 ;; Hardware stack levels used:    1
   854 ;; Hardware stack levels required when called:    3
   855 ;; This function calls:
   856 ;;		_LED_Flash
   857 ;; This function is called by:
   858 ;;		_main
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           
   863                           ;psect for function _ActionLED
   864  0103                     _ActionLED:	
   865                           
   866                           ;main.c: 268: if ((IR_Dat1 == 0xD8) && (IR_Dat2 == 0x27)) {
   867                           
   868                           ;incstack = 0
   869                           ; Regs used in _ActionLED: [wreg+status,2+status,0+pclath+cstack]
   870  0103  0878               	movf	_IR_Dat1,w
   871  0104  3AD8               	xorlw	216
   872  0105  1D03               	skipz
   873  0106  290E               	goto	l1111
   874  0107  0879               	movf	_IR_Dat2,w
   875  0108  3A27               	xorlw	39
   876  0109  1D03               	skipz
   877  010A  290E               	goto	l1111
   878                           
   879                           ;main.c: 270: RA1 = 1;
   880  010B  0020               	movlb	0	; select bank0
   881  010C  148C               	bsf	12,1	;volatile
   882                           
   883                           ;main.c: 271: RA0 = 0;
   884  010D  100C               	bcf	12,0	;volatile
   885  010E                     l1111:	
   886                           
   887                           ;main.c: 272: }
   888                           ;main.c: 273: if ((IR_Dat1 == 0x60) && (IR_Dat2 == 0x9F)) {
   889  010E  0878               	movf	_IR_Dat1,w
   890  010F  3A60               	xorlw	96
   891  0110  1D03               	skipz
   892  0111  2919               	goto	l1117
   893  0112  0879               	movf	_IR_Dat2,w
   894  0113  3A9F               	xorlw	159
   895  0114  1D03               	skipz
   896  0115  2919               	goto	l1117
   897                           
   898                           ;main.c: 275: RA1 = 0;
   899  0116  0020               	movlb	0	; select bank0
   900  0117  108C               	bcf	12,1	;volatile
   901                           
   902                           ;main.c: 276: RA0 = 1;
   903  0118  140C               	bsf	12,0	;volatile
   904  0119                     l1117:	
   905                           
   906                           ;main.c: 277: }
   907                           ;main.c: 278: if ((IR_Dat1 == 0xB8) && (IR_Dat2 == 0x47)) {
   908  0119  0878               	movf	_IR_Dat1,w
   909  011A  3AB8               	xorlw	184
   910  011B  1D03               	skipz
   911  011C  2924               	goto	l1123
   912  011D  0879               	movf	_IR_Dat2,w
   913  011E  3A47               	xorlw	71
   914  011F  1D03               	skipz
   915  0120  2924               	goto	l1123
   916                           
   917                           ;main.c: 280: RA1 = 0;
   918  0121  0020               	movlb	0	; select bank0
   919  0122  108C               	bcf	12,1	;volatile
   920                           
   921                           ;main.c: 281: RA0 = 0;
   922  0123  100C               	bcf	12,0	;volatile
   923  0124                     l1123:	
   924                           
   925                           ;main.c: 282: }
   926                           ;main.c: 283: if ((IR_Dat1 == 0xA0) && (IR_Dat2 == 0x5F)) {
   927  0124  0878               	movf	_IR_Dat1,w
   928  0125  3AA0               	xorlw	160
   929  0126  1D03               	skipz
   930  0127  292E               	goto	l1129
   931  0128  0879               	movf	_IR_Dat2,w
   932  0129  3A5F               	xorlw	95
   933  012A  1D03               	skipz
   934  012B  292E               	goto	l1129
   935                           
   936                           ;main.c: 285: LED_Flash(1);
   937  012C  3001               	movlw	1
   938  012D  21B2               	fcall	_LED_Flash
   939  012E                     l1129:	
   940                           
   941                           ;main.c: 286: }
   942                           ;main.c: 287: if ((IR_Dat1 == 0x00) && (IR_Dat2 == 0xFF)) {
   943  012E  08F8               	movf	_IR_Dat1,f
   944  012F  1D03               	skipz
   945  0130  2937               	goto	l1135
   946  0131  0879               	movf	_IR_Dat2,w
   947  0132  3AFF               	xorlw	255
   948  0133  1D03               	skipz
   949  0134  2937               	goto	l1135
   950                           
   951                           ;main.c: 289: LED_Flash(2);
   952  0135  3002               	movlw	2
   953  0136  21B2               	fcall	_LED_Flash
   954  0137                     l1135:	
   955                           
   956                           ;main.c: 290: }
   957                           ;main.c: 291: if ((IR_Dat1 == 0x10) && (IR_Dat2 == 0xEF)) {
   958  0137  0878               	movf	_IR_Dat1,w
   959  0138  3A10               	xorlw	16
   960  0139  1D03               	skipz
   961  013A  2941               	goto	l1141
   962  013B  0879               	movf	_IR_Dat2,w
   963  013C  3AEF               	xorlw	239
   964  013D  1D03               	skipz
   965  013E  2941               	goto	l1141
   966                           
   967                           ;main.c: 293: LED_Flash(3);
   968  013F  3003               	movlw	3
   969  0140  21B2               	fcall	_LED_Flash
   970  0141                     l1141:	
   971                           
   972                           ;main.c: 294: }
   973                           ;main.c: 295: if ((IR_Dat1 == 0x80) && (IR_Dat2 == 0x7F)) {
   974  0141  0878               	movf	_IR_Dat1,w
   975  0142  3A80               	xorlw	128
   976  0143  1D03               	skipz
   977  0144  294B               	goto	l1147
   978  0145  0879               	movf	_IR_Dat2,w
   979  0146  3A7F               	xorlw	127
   980  0147  1D03               	skipz
   981  0148  294B               	goto	l1147
   982                           
   983                           ;main.c: 297: LED_Flash(4);
   984  0149  3004               	movlw	4
   985  014A  21B2               	fcall	_LED_Flash
   986  014B                     l1147:	
   987                           
   988                           ;main.c: 298: }
   989                           ;main.c: 299: if ((IR_Dat1 == 0x20) && (IR_Dat2 == 0xDF)) {
   990  014B  0878               	movf	_IR_Dat1,w
   991  014C  3A20               	xorlw	32
   992  014D  1D03               	skipz
   993  014E  2955               	goto	l1153
   994  014F  0879               	movf	_IR_Dat2,w
   995  0150  3ADF               	xorlw	223
   996  0151  1D03               	skipz
   997  0152  2955               	goto	l1153
   998                           
   999                           ;main.c: 301: LED_Flash(5);
  1000  0153  3005               	movlw	5
  1001  0154  21B2               	fcall	_LED_Flash
  1002  0155                     l1153:	
  1003                           
  1004                           ;main.c: 302: }
  1005                           ;main.c: 303: if ((IR_Dat1 == 0xB1) && (IR_Dat2 == 0x4E)) {
  1006  0155  0878               	movf	_IR_Dat1,w
  1007  0156  3AB1               	xorlw	177
  1008  0157  1D03               	skipz
  1009  0158  295F               	goto	l1159
  1010  0159  0879               	movf	_IR_Dat2,w
  1011  015A  3A4E               	xorlw	78
  1012  015B  1D03               	skipz
  1013  015C  295F               	goto	l1159
  1014                           
  1015                           ;main.c: 305: LED_Flash(6);
  1016  015D  3006               	movlw	6
  1017  015E  21B2               	fcall	_LED_Flash
  1018  015F                     l1159:	
  1019                           
  1020                           ;main.c: 306: }
  1021                           ;main.c: 307: if ((IR_Dat1 == 0x11) && (IR_Dat2 == 0xEE)) {
  1022  015F  0878               	movf	_IR_Dat1,w
  1023  0160  3A11               	xorlw	17
  1024  0161  1D03               	skipz
  1025  0162  2969               	goto	l1165
  1026  0163  0879               	movf	_IR_Dat2,w
  1027  0164  3AEE               	xorlw	238
  1028  0165  1D03               	skipz
  1029  0166  2969               	goto	l1165
  1030                           
  1031                           ;main.c: 309: LED_Flash(7);
  1032  0167  3007               	movlw	7
  1033  0168  21B2               	fcall	_LED_Flash
  1034  0169                     l1165:	
  1035                           
  1036                           ;main.c: 310: }
  1037                           ;main.c: 311: if ((IR_Dat1 == 0x21) && (IR_Dat2 == 0xDE)) {
  1038  0169  0878               	movf	_IR_Dat1,w
  1039  016A  3A21               	xorlw	33
  1040  016B  1D03               	skipz
  1041  016C  2973               	goto	l1171
  1042  016D  0879               	movf	_IR_Dat2,w
  1043  016E  3ADE               	xorlw	222
  1044                           
  1045                           ;main.c: 313: LED_Flash(8);
  1046  016F  3008               	movlw	8
  1047  0170  1D03               	skipz
  1048  0171  2973               	goto	l1171
  1049  0172  21B2               	fcall	_LED_Flash
  1050  0173                     l1171:	
  1051                           
  1052                           ;main.c: 314: }
  1053                           ;main.c: 315: if ((IR_Dat1 == 0x81) && (IR_Dat2 == 0x7E)) {
  1054  0173  0878               	movf	_IR_Dat1,w
  1055  0174  3A81               	xorlw	129
  1056  0175  1D03               	skipz
  1057  0176  0008               	return
  1058  0177  0879               	movf	_IR_Dat2,w
  1059  0178  3A7E               	xorlw	126
  1060  0179  1D03               	skipz
  1061  017A  0008               	return
  1062                           
  1063                           ;main.c: 317: LED_Flash(9);
  1064  017B  3009               	movlw	9
  1065  017C  21B2               	fcall	_LED_Flash
  1066  017D  0008               	return
  1067  017E                     __end_of_ActionLED:	
  1068                           
  1069                           	psect	text3
  1070  01B2                     __ptext3:	
  1071 ;; *************** function _LED_Flash *****************
  1072 ;; Defined at:
  1073 ;;		line 322 in file "main.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  F_Cnt           1    wreg     unsigned char 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  F_Cnt           1    0[BANK0 ] unsigned char 
  1078 ;;  k               1    1[BANK0 ] unsigned char 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;		None               void
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, status,0, pclath, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1
  1088 ;;      Params:         0       0       0
  1089 ;;      Locals:         0       2       0
  1090 ;;      Temps:          1       0       0
  1091 ;;      Totals:         1       2       0
  1092 ;;Total ram usage:        3 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    2
  1095 ;; This function calls:
  1096 ;;		_Delay_10ms
  1097 ;; This function is called by:
  1098 ;;		_ActionLED
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           
  1103                           ;psect for function _LED_Flash
  1104  01B2                     _LED_Flash:	
  1105                           
  1106                           ;incstack = 0
  1107                           ; Regs used in _LED_Flash: [wreg+status,2+status,0+pclath+cstack]
  1108                           ;LED_Flash@F_Cnt stored from wreg
  1109  01B2  0020               	movlb	0	; select bank0
  1110  01B3  00A4               	movwf	LED_Flash@F_Cnt
  1111                           
  1112                           ;main.c: 323: unsigned char k;
  1113                           ;main.c: 324: RA1 = 0;
  1114  01B4  108C               	bcf	12,1	;volatile
  1115                           
  1116                           ;main.c: 325: RA0 = 0;
  1117  01B5  100C               	bcf	12,0	;volatile
  1118                           
  1119                           ;main.c: 326: for (k = 0; F_Cnt > k; k++) {
  1120  01B6  01A5               	clrf	LED_Flash@k
  1121  01B7                     l1081:	
  1122  01B7  0824               	movf	LED_Flash@F_Cnt,w
  1123  01B8  0225               	subwf	LED_Flash@k,w
  1124  01B9  1803               	btfsc	3,0
  1125  01BA  29C8               	goto	l143
  1126                           
  1127                           ;main.c: 327: RA1 = 1;
  1128  01BB  148C               	bsf	12,1	;volatile
  1129                           
  1130                           ;main.c: 328: Delay_10ms(20);
  1131  01BC  3014               	movlw	20
  1132  01BD  2214               	fcall	_Delay_10ms
  1133                           
  1134                           ;main.c: 329: RA1 = 0;
  1135  01BE  0020               	movlb	0	; select bank0
  1136  01BF  108C               	bcf	12,1	;volatile
  1137                           
  1138                           ;main.c: 330: Delay_10ms(20);
  1139  01C0  3014               	movlw	20
  1140  01C1  2214               	fcall	_Delay_10ms
  1141  01C2  3001               	movlw	1
  1142  01C3  00F6               	movwf	??_LED_Flash
  1143  01C4  0876               	movf	??_LED_Flash,w
  1144  01C5  0020               	movlb	0	; select bank0
  1145  01C6  07A5               	addwf	LED_Flash@k,f
  1146  01C7  29B7               	goto	l1081
  1147  01C8                     l143:	
  1148                           
  1149                           ;main.c: 331: }
  1150                           ;main.c: 332: RA1 = 0;
  1151  01C8  108C               	bcf	12,1	;volatile
  1152  01C9  0008               	return
  1153  01CA                     __end_of_LED_Flash:	
  1154                           
  1155                           	psect	text4
  1156  0214                     __ptext4:	
  1157 ;; *************** function _Delay_10ms *****************
  1158 ;; Defined at:
  1159 ;;		line 134 in file "main.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  time            1    wreg     unsigned char 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  time            1    5[COMMON] unsigned char 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;		None               void
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1
  1173 ;;      Params:         0       0       0
  1174 ;;      Locals:         1       0       0
  1175 ;;      Temps:          2       0       0
  1176 ;;      Totals:         3       0       0
  1177 ;;Total ram usage:        3 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    1
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;;		_LED_Flash
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           
  1189                           ;psect for function _Delay_10ms
  1190  0214                     _Delay_10ms:	
  1191                           
  1192                           ;incstack = 0
  1193                           ; Regs used in _Delay_10ms: [wreg+status,2+status,0]
  1194                           ;Delay_10ms@time stored from wreg
  1195  0214  00F5               	movwf	Delay_10ms@time
  1196  0215                     l1069:	
  1197                           ;main.c: 135: while (time--) {
  1198                           
  1199  0215  3001               	movlw	1
  1200  0216  02F5               	subwf	Delay_10ms@time,f
  1201  0217  0875               	movf	Delay_10ms@time,w
  1202  0218  3AFF               	xorlw	255
  1203  0219  1903               	btfsc	3,2
  1204  021A  0008               	return
  1205                           
  1206                           ;main.c: 136: _delay((unsigned long)((10)*(16000000/4000.0)));
  1207  021B  3034               	movlw	52
  1208  021C  00F4               	movwf	??_Delay_10ms+1
  1209  021D  30F1               	movlw	241
  1210  021E  00F3               	movwf	??_Delay_10ms
  1211  021F                     u1437:	
  1212  021F  0BF3               	decfsz	??_Delay_10ms,f
  1213  0220  2A1F               	goto	u1437
  1214  0221  0BF4               	decfsz	??_Delay_10ms+1,f
  1215  0222  2A1F               	goto	u1437
  1216  0223  3200               	nop2
  1217  0224  2A15               	goto	l1069
  1218  0225                     __end_of_Delay_10ms:	
  1219                           
  1220                           	psect	intentry
  1221  0004                     __pintentry:	
  1222 ;; *************** function _isr *****************
  1223 ;; Defined at:
  1224 ;;		line 101 in file "main.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;		None               void
  1231 ;; Registers used:
  1232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1
  1238 ;;      Params:         0       0       0
  1239 ;;      Locals:         0       0       0
  1240 ;;      Temps:          3       0       0
  1241 ;;      Totals:         3       0       0
  1242 ;;Total ram usage:        3 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		Interrupt level 1
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251  0004                     _isr:	
  1252                           
  1253                           ;incstack = 0
  1254                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
  1255  0004  147E               	bsf	126,0	;set compiler interrupt flag
  1256  0005  3180               	pagesel	$
  1257  0006  0020               	movlb	0	; select bank0
  1258  0007  087F               	movf	127,w
  1259  0008  00F2               	movwf	??_isr+2
  1260                           
  1261                           ;main.c: 103: if (TMR1IF) {
  1262  0009  1C11               	btfss	17,0	;volatile
  1263  000A  2831               	goto	i1l959
  1264                           
  1265                           ;main.c: 104: if (RA5 == 0)
  1266  000B  1A8C               	btfsc	12,5	;volatile
  1267  000C  2811               	goto	i1l951
  1268                           
  1269                           ;main.c: 105: TMR1_DC = 3;
  1270  000D  3003               	movlw	3
  1271  000E  00F0               	movwf	??_isr
  1272  000F  0870               	movf	??_isr,w
  1273  0010  00A3               	movwf	_TMR1_DC
  1274  0011                     i1l951:	
  1275                           
  1276                           ;main.c: 106: if (RA5 == 1)
  1277  0011  1E8C               	btfss	12,5	;volatile
  1278  0012  2817               	goto	i1l955
  1279                           
  1280                           ;main.c: 107: TMR1_DC = 4;
  1281  0013  3004               	movlw	4
  1282  0014  00F0               	movwf	??_isr
  1283  0015  0870               	movf	??_isr,w
  1284  0016  00A3               	movwf	_TMR1_DC
  1285  0017                     i1l955:	
  1286                           
  1287                           ;main.c: 108: TMR1H = DaTM1_H[TMR1_DC];
  1288  0017  0823               	movf	_TMR1_DC,w
  1289  0018  00F0               	movwf	??_isr
  1290  0019  01F1               	clrf	??_isr+1
  1291  001A  35F0               	lslf	??_isr,f
  1292  001B  0DF1               	rlf	??_isr+1,f
  1293  001C  3000               	movlw	low (_DaTM1_H| (0+32768))
  1294  001D  0770               	addwf	??_isr,w
  1295  001E  0084               	movwf	4
  1296  001F  3082               	movlw	high (_DaTM1_H| (0+32768))
  1297  0020  3D71               	addwfc	??_isr+1,w
  1298  0021  0085               	movwf	5
  1299  0022  0800               	movf	0,w	;code access
  1300  0023  0097               	movwf	23	;volatile
  1301                           
  1302                           ;main.c: 109: TMR1L = DaTM1_L[TMR1_DC];
  1303  0024  0823               	movf	_TMR1_DC,w
  1304  0025  00F0               	movwf	??_isr
  1305  0026  01F1               	clrf	??_isr+1
  1306  0027  35F0               	lslf	??_isr,f
  1307  0028  0DF1               	rlf	??_isr+1,f
  1308  0029  300A               	movlw	low (_DaTM1_L| (0+32768))
  1309  002A  0770               	addwf	??_isr,w
  1310  002B  0084               	movwf	4
  1311  002C  3082               	movlw	high (_DaTM1_L| (0+32768))
  1312  002D  3D71               	addwfc	??_isr+1,w
  1313  002E  0085               	movwf	5
  1314  002F  0800               	movf	0,w	;code access
  1315  0030  0096               	movwf	22	;volatile
  1316  0031                     i1l959:	
  1317                           
  1318                           ;main.c: 110: }
  1319                           ;main.c: 111: TMR1_EF = 1;
  1320  0031  01FA               	clrf	_TMR1_EF
  1321  0032  0AFA               	incf	_TMR1_EF,f
  1322                           
  1323                           ;main.c: 112: TMR1IF = 0;
  1324  0033  1011               	bcf	17,0	;volatile
  1325  0034  0872               	movf	??_isr+2,w
  1326  0035  00FF               	movwf	127
  1327  0036  107E               	bcf	126,0	;clear compiler interrupt flag
  1328  0037  0009               	retfie
  1329  0038                     __end_of_isr:	
  1330  007E                     btemp	set	126	;btemp
  1331  007E                     pic14e$flags	set	126
  1332  007E                     wtemp	set	126
  1333  007E                     wtemp0	set	126
  1334  0080                     wtemp1	set	128
  1335  0082                     wtemp2	set	130
  1336  0084                     wtemp3	set	132
  1337  0086                     wtemp4	set	134
  1338  0088                     wtemp5	set	136
  1339  007F                     wtemp6	set	127
  1340  007E                     ttemp	set	126
  1341  007E                     ttemp0	set	126
  1342  0081                     ttemp1	set	129
  1343  0084                     ttemp2	set	132
  1344  0087                     ttemp3	set	135
  1345  007F                     ttemp4	set	127
  1346  007E                     ltemp	set	126
  1347  007E                     ltemp0	set	126
  1348  0082                     ltemp1	set	130
  1349  0086                     ltemp2	set	134
  1350  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    20
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      4       8
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_IR_DatST
    _ActionLED->_LED_Flash
    _LED_Flash->_Delay_10ms

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _ActionLED->_LED_Flash

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     337
                                              7 COMMON     1     1      0
                                              2 BANK0      2     2      0
                          _ActionLED
                         _Delay_10ms
                           _IR_DatST
 ---------------------------------------------------------------------------------
 (1) _IR_DatST                                             4     4      0     136
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ActionLED                                            0     0      0      99
                          _LED_Flash
 ---------------------------------------------------------------------------------
 (2) _LED_Flash                                            3     3      0      99
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                         _Delay_10ms
 ---------------------------------------------------------------------------------
 (1) _Delay_10ms                                           3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ActionLED
     _LED_Flash
       _Delay_10ms
   _Delay_10ms
   _IR_DatST

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      13       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      4       8       6       10.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      13       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Feb 10 15:21:11 2015

            __CFG_CP$OFF 0000                       l80 019B                       l76 01AF  
                     l94 00F6                      l100 0096                      l102 009B  
                    l113 00C4                      l107 00AC                      l116 00CF  
                    l143 01C8                      _GIE 005F                      _RA0 0060  
                    _RA1 0061                      _RA3 0063                      _RA4 0064  
                    _RA5 0065             __CFG_CPD$OFF 0000                      _isr 0004  
           __CFG_BORV$LO 0000             __CFG_LVP$OFF 0000                     l1111 010E  
                   l1123 0124                     l1141 0141                     l1117 0119  
                   l1135 0137                     l1223 0074                     l1081 01B7  
                   l1153 0155                     l1129 012E                     l1225 0081  
                   l1171 0173                     l1147 014B                     l1091 0190  
                   l1069 0215                     l1165 0169                     l1253 00C8  
                   l1237 00AB                     l1159 015F                     l1255 00D4  
                   l1239 00B0                     l1271 00FA                     ?_isr 0070  
                   _LATA 010C                     u1407 00B4                     u1417 00CA  
                   u1427 00D6                     u1437 021F                     u1367 007B  
                   u1377 0085                     u1387 0091                     u1397 00A1  
                   _PEIE 005E          __end_of_DaTM1_H 020A          __end_of_DaTM1_L 0214  
                   _WPUA 020C               _Delay_10ms 0214             __CFG_WRT$OFF 0000  
                   _main 0043                     fsr0h 0005                     fsr0l 0004  
                   indf0 0000                     btemp 007E                     ltemp 007E  
     __size_of_LED_Flash 0018                     start 0038                     ttemp 007E  
                   wtemp 007E            __CFG_IESO$OFF 0000           Delay_10ms@time 0075  
                  ??_isr 0070                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _T1CON 0018                    i1l951 0011                    i1l955 0017  
                  i1l959 0031                    _TMR1H 0017                    _TMR1L 0016  
                  _PORTA 000C                    _TRISA 008C         __end_of_IR_DatST 01B2  
         __CFG_FCMEN$OFF 0000                    main@i 0077           __CFG_BOREN$OFF 0000  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F           __CFG_MCLRE$OFF 0000          __initialization 0039  
           __end_of_main 0103       __size_of_ActionLED 007B                   ??_main 0026  
         __CFG_PLLEN$OFF 0000        __end_of_LED_Flash 01CA                   _APFCON 011D  
                 _ANSELA 018C              ?_Delay_10ms 0070                   _OSCCON 0099  
                 _TMR1IE 0488                   _TMR1IF 0088                   _TMR1ON 00C0  
         __CFG_PWRTE$OFF 0000                   _StartF 0022                   _nWPUEN 04AF  
         __CFG_STVREN$ON 0000        __end_of_ActionLED 017E  __end_of__initialization 0040  
         __pcstackCOMMON 0070                ?_IR_DatST 0070      __size_of_Delay_10ms 0011  
             __pbssBANK0 0020               __pmaintext 0043               ??_IR_DatST 0073  
              IR_DatST@j 0074               __pintentry 0004                  _DaTM1_H 0200  
                _DaTM1_L 020A                  _IR_Dat1 0078                  _IR_Dat2 0079  
                _IR_DatX 0020                  _TMR1_DC 0023                  _TMR1_EF 007A  
                _RepeatF 0021                  __ptext1 017E                  __ptext2 0103  
                __ptext3 01B2                  __ptext4 0214             __size_of_isr 0034  
              _LED_Flash 01B2     end_of_initialization 0040             ??_Delay_10ms 0073  
           __pstringtext 0200       __end_of_Delay_10ms 0225         __CFG_FOSC$INTOSC 0000  
             ?_LED_Flash 0070                _ActionLED 0103               LED_Flash@k 0025  
      __size_of_IR_DatST 0034      start_initialization 0039              __end_of_isr 0038  
             ?_ActionLED 0070              __pbssCOMMON 0078                ___latbits 0000  
          __pcstackBANK0 0024              ??_LED_Flash 0076           LED_Flash@F_Cnt 0024  
            ??_ActionLED 0077                 _IR_DatST 017E            __size_of_main 00C0  
            pic14e$flags 007E                 intlevel1 0000           IR_DatST@BitPos 0076  
      __CFG_CLKOUTEN$OFF 0000  
